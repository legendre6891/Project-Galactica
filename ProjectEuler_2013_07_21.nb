(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    397797,       8933]
NotebookOptionsPosition[    369912,       7982]
NotebookOutlinePosition[    371377,       8028]
CellTagsIndexPosition[    371075,       8018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", "9999"}], "]"}], ",", "IsAmicable"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583419016925387*^9, 3.583419039016478*^9}, {
  3.583419073720961*^9, 3.583419081983892*^9}, {3.583419410021381*^9, 
  3.58341943439612*^9}}],

Cell[BoxData["40284"], "Output",
 CellChangeTimes->{{3.5834194188482*^9, 3.5834194351101637`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Equal]", "2"}]], "Input",
 CellChangeTimes->{{3.583419097679119*^9, 3.58341909809951*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.583419098936475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DivisorSigma", "[", 
  RowBox[{"1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.58341910605194*^9, 3.583419120301132*^9}}],

Cell[BoxData["18"], "Output",
 CellChangeTimes->{3.5834191213628387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DivisorSigma", "[", 
  RowBox[{"1", ",", 
   RowBox[{"DivisorSigma", "[", 
    RowBox[{"1", ",", "220"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583419173022081*^9, 3.583419188482646*^9}}],

Cell[BoxData["1560"], "Output",
 CellChangeTimes->{3.583419189531493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProperDivisor", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"DivisorSigma", "[", 
     RowBox[{"1", ",", "#"}], "]"}], "-", "#"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.5834192450314837`*^9, 3.583419259716679*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DivisorSigma", "[", 
    RowBox[{"1", ",", "#1"}], "]"}], "-", "#1"}], "&"}]], "Output",
 CellChangeTimes->{3.583419261902266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProperDivisor", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.58341926271457*^9, 3.583419267775798*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.583419268232568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProperDivisor", "[", "220", "]"}]], "Input",
 CellChangeTimes->{{3.583419269733601*^9, 3.5834192727957773`*^9}}],

Cell[BoxData["284"], "Output",
 CellChangeTimes->{3.583419273356558*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583419278699682*^9, 3.583419281843758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProperDivisor", "[", 
  RowBox[{"ProperDivisor", "[", "220", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583419287806114*^9, 3.583419314065934*^9}}],

Cell[BoxData["220"], "Output",
 CellChangeTimes->{{3.583419292697775*^9, 3.583419314814371*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAmicable", "=", 
  RowBox[{
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ProperDivisor", "[", 
       RowBox[{"ProperDivisor", "[", "#", "]"}], "]"}], "\[Equal]", "#"}], 
     ",", 
     RowBox[{"#", "\[NotEqual]", 
      RowBox[{"ProperDivisor", "[", "#", "]"}]}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.583419320397109*^9, 3.583419335432108*^9}, {
  3.583419523417103*^9, 3.583419568370473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProperDivisor", "[", 
     RowBox[{"ProperDivisor", "[", "#1", "]"}], "]"}], "\[Equal]", "#1"}], "&&", 
   RowBox[{"#1", "\[NotEqual]", 
    RowBox[{"ProperDivisor", "[", "#1", "]"}]}]}], "&"}]], "Output",
 CellChangeTimes->{3.583419336300864*^9, 3.5834195698671503`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAmicable", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.583419336898918*^9, 3.583419339691637*^9}, 
   3.5834195738106422`*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.583419340103568*^9, 3.58341957426436*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAmicable", "[", 
  RowBox[{"ProperDivisor", "[", "220", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583419342148302*^9, 3.583419348751297*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.583419349054261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAmicable", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.583419363226643*^9, 3.583419370365753*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DivisorSigma", "[", 
   RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.583419370670313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DivisorSigma", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.583419376868835*^9, 3.583419384715592*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DivisorSigma", "::", "argr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(DivisorSigma\\)\[NoBreak] called with 1 \
argument; \[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/DivisorSigma\\\", ButtonNote -> \
\\\"DivisorSigma::argr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5834193851378117`*^9}],

Cell[BoxData[
 RowBox[{"DivisorSigma", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.583419385140593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAmicable", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.583419386218732*^9, 3.5834193884801903`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.583419388762212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", "9999"}], "]"}], ",", "IsAmicable"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData["31626"], "Output",
 CellChangeTimes->{3.583419465870364*^9, 3.5834195784477873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "9999"}], "]"}], ",", "IsAmicable"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834194680487022`*^9, 3.5834194705413857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "28", ",", "220", ",", "284", ",", "496", ",", "1184", ",", 
   "1210", ",", "2620", ",", "2924", ",", "5020", ",", "5564", ",", "6232", 
   ",", "6368", ",", "8128"}], "}"}]], "Output",
 CellChangeTimes->{3.583419471290976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "6", ",", "28", ",", "220", ",", "284", ",", "496", ",", "1184", ",", 
    "1210", ",", "2620", ",", "2924", ",", "5020", ",", "5564", ",", "6232", 
    ",", "6368", ",", "8128"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.583419774263726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAbundant", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ProperDivisor", "[", "#", "]"}], ">", "#"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.583419745232348*^9, 3.583419786815504*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProperDivisor", "[", "#1", "]"}], ">", "#1"}], "&"}]], "Output",
 CellChangeTimes->{3.58341978724301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProperDivisor", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.583419788362443*^9, 3.583419791853001*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.583419792148621*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsAbundant", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.583419796007045*^9, 3.583419798811873*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.583419799078079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AbundantList", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "28123"}], "]"}], ",", "IsAbundant"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.583419818533763*^9, 3.583419846651238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583420552191177*^9, 3.583420563485078*^9}, {
  3.58342071135115*^9, 3.5834207165714703`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{404., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"\[LeftSkeleton]", "4090", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{68., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 35, 24984121467248874504, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{71., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 35, 24984121467248874504, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{111., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 35, 24984121467248874504, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{107., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[35]]], "Output",
 CellChangeTimes->{3.583420716944459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.583420749162539*^9, 3.583420755489933*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583420755764641*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5834208086306458`*^9, 3.583420826407206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Total", ",", 
   RowBox[{"Tuples", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583420836159354*^9, 3.583420865508965*^9}, {
  3.583421007798489*^9, 3.583421034294046*^9}, {3.583421085342464*^9, 
  3.58342109099746*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.583420856116205*^9, 3.583420865844386*^9}, {
   3.583421008915597*^9, 3.58342103472467*^9}, 3.5834210916828547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AbundantSums", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{"Total", ",", 
      RowBox[{"Tuples", "[", 
       RowBox[{"AbundantList", ",", "2"}], "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.583421111998703*^9, 3.583421151151572*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583421177015074*^9, 3.5834211776096373`*^9}, {
  3.5834212122144117`*^9, 3.5834212207171793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.583421226949998*^9, 3.583421253788971*^9}}],

Cell[BoxData[
 RowBox[{"1", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Output",
 CellChangeTimes->{3.5834212543973207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Element", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583421257422812*^9, 3.583421260920364*^9}}],

Cell[BoxData[
 RowBox[{"1", "\[Element]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Output",
 CellChangeTimes->{3.5834212611393843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "28123"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"AbundantSums", ",", "#"}], "]"}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.58342138672654*^9, 3.583421390624151*^9}, {
  3.583421434135395*^9, 3.583421437024663*^9}, {3.58342148483454*^9, 
  3.58342149868902*^9}, {3.583421760503358*^9, 3.583421761687747*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "25", ",", "26", ",", "27", ",", "28", ",", "29", 
   ",", "31", ",", "33", ",", "34", ",", "35", ",", "37", ",", "39", ",", 
   "41", ",", "43", ",", "45", ",", "46", ",", "47", ",", "49", ",", "51", 
   ",", "53", ",", "55", ",", "57", ",", "59", ",", "61", ",", "63", ",", 
   "65", ",", "67", ",", "69", ",", "71", ",", "73", ",", "75", ",", "77", 
   ",", "79", ",", "81", ",", "83", ",", "85", ",", "87", ",", "89", ",", 
   "91", ",", "93", ",", "95", ",", "97", ",", "99", ",", "101", ",", "103", 
   ",", "105", ",", "107", ",", "109", ",", "111", ",", "113", ",", "115", 
   ",", "117", ",", "119", ",", "121", ",", "123", ",", "125", ",", "127", 
   ",", "129", ",", "131", ",", "133", ",", "135", ",", "137", ",", "139", 
   ",", "141", ",", "143", ",", "145", ",", "147", ",", "149", ",", "151", 
   ",", "153", ",", "155", ",", "157", ",", "159", ",", "161", ",", "163", 
   ",", "165", ",", "167", ",", "169", ",", "171", ",", "173", ",", "175", 
   ",", "177", ",", "179", ",", "181", ",", "183", ",", "185", ",", "187", 
   ",", "189", ",", "191", ",", "193", ",", "195", ",", "197", ",", "199", 
   ",", "201", ",", "203", ",", "205", ",", "207", ",", "209", ",", "211", 
   ",", "213", ",", "215", ",", "217", ",", "219", ",", "221", ",", "223", 
   ",", "225", ",", "227", ",", "229", ",", "231", ",", "233", ",", "235", 
   ",", "237", ",", "239", ",", "241", ",", "243", ",", "245", ",", "247", 
   ",", "249", ",", "251", ",", "253", ",", "255", ",", "257", ",", "259", 
   ",", "261", ",", "263", ",", "265", ",", "267", ",", "269", ",", "271", 
   ",", "273", ",", "275", ",", "277", ",", "279", ",", "281", ",", "283", 
   ",", "285", ",", "287", ",", "289", ",", "291", ",", "293", ",", "295", 
   ",", "297", ",", "299", ",", "301", ",", "303", ",", "305", ",", "307", 
   ",", "309", ",", "311", ",", "313", ",", "315", ",", "317", ",", "319", 
   ",", "321", ",", "323", ",", "325", ",", "327", ",", "329", ",", "331", 
   ",", "333", ",", "335", ",", "337", ",", "339", ",", "341", ",", "343", 
   ",", "345", ",", "347", ",", "349", ",", "351", ",", "353", ",", "355", 
   ",", "357", ",", "359", ",", "361", ",", "363", ",", "365", ",", "367", 
   ",", "369", ",", "371", ",", "373", ",", "375", ",", "377", ",", "379", 
   ",", "381", ",", "383", ",", "385", ",", "387", ",", "389", ",", "391", 
   ",", "393", ",", "395", ",", "397", ",", "399", ",", "401", ",", "403", 
   ",", "405", ",", "407", ",", "409", ",", "411", ",", "413", ",", "415", 
   ",", "417", ",", "419", ",", "421", ",", "423", ",", "425", ",", "427", 
   ",", "429", ",", "431", ",", "433", ",", "435", ",", "437", ",", "439", 
   ",", "441", ",", "443", ",", "445", ",", "447", ",", "449", ",", "451", 
   ",", "453", ",", "455", ",", "457", ",", "459", ",", "461", ",", "463", 
   ",", "465", ",", "467", ",", "469", ",", "471", ",", "473", ",", "475", 
   ",", "477", ",", "479", ",", "481", ",", "483", ",", "485", ",", "487", 
   ",", "489", ",", "491", ",", "493", ",", "495", ",", "497", ",", "499", 
   ",", "501", ",", "503", ",", "505", ",", "507", ",", "509", ",", "511", 
   ",", "513", ",", "515", ",", "517", ",", "519", ",", "521", ",", "523", 
   ",", "525", ",", "527", ",", "529", ",", "531", ",", "533", ",", "535", 
   ",", "537", ",", "539", ",", "541", ",", "543", ",", "545", ",", "547", 
   ",", "549", ",", "551", ",", "553", ",", "555", ",", "557", ",", "559", 
   ",", "561", ",", "563", ",", "565", ",", "567", ",", "569", ",", "571", 
   ",", "573", ",", "575", ",", "577", ",", "579", ",", "581", ",", "583", 
   ",", "585", ",", "587", ",", "589", ",", "591", ",", "593", ",", "595", 
   ",", "597", ",", "599", ",", "601", ",", "603", ",", "605", ",", "607", 
   ",", "609", ",", "611", ",", "613", ",", "615", ",", "617", ",", "619", 
   ",", "621", ",", "623", ",", "625", ",", "627", ",", "629", ",", "631", 
   ",", "633", ",", "635", ",", "637", ",", "639", ",", "641", ",", "643", 
   ",", "645", ",", "647", ",", "649", ",", "651", ",", "653", ",", "655", 
   ",", "657", ",", "659", ",", "661", ",", "663", ",", "665", ",", "667", 
   ",", "669", ",", "671", ",", "673", ",", "675", ",", "677", ",", "679", 
   ",", "681", ",", "683", ",", "685", ",", "687", ",", "689", ",", "691", 
   ",", "693", ",", "695", ",", "697", ",", "699", ",", "701", ",", "703", 
   ",", "705", ",", "707", ",", "709", ",", "711", ",", "713", ",", "715", 
   ",", "717", ",", "719", ",", "721", ",", "723", ",", "725", ",", "727", 
   ",", "729", ",", "731", ",", "733", ",", "735", ",", "737", ",", "739", 
   ",", "741", ",", "743", ",", "745", ",", "747", ",", "749", ",", "751", 
   ",", "753", ",", "755", ",", "757", ",", "759", ",", "761", ",", "763", 
   ",", "765", ",", "767", ",", "769", ",", "771", ",", "773", ",", "775", 
   ",", "777", ",", "779", ",", "781", ",", "783", ",", "785", ",", "787", 
   ",", "789", ",", "791", ",", "793", ",", "795", ",", "797", ",", "799", 
   ",", "801", ",", "803", ",", "805", ",", "807", ",", "809", ",", "811", 
   ",", "813", ",", "815", ",", "817", ",", "819", ",", "821", ",", "823", 
   ",", "825", ",", "827", ",", "829", ",", "831", ",", "833", ",", "835", 
   ",", "837", ",", "839", ",", "841", ",", "843", ",", "845", ",", "847", 
   ",", "849", ",", "851", ",", "853", ",", "855", ",", "857", ",", "859", 
   ",", "861", ",", "863", ",", "865", ",", "867", ",", "869", ",", "871", 
   ",", "873", ",", "875", ",", "877", ",", "879", ",", "881", ",", "883", 
   ",", "885", ",", "887", ",", "889", ",", "891", ",", "893", ",", "895", 
   ",", "897", ",", "899", ",", "901", ",", "903", ",", "905", ",", "907", 
   ",", "909", ",", "911", ",", "913", ",", "915", ",", "917", ",", "919", 
   ",", "921", ",", "923", ",", "925", ",", "927", ",", "929", ",", "931", 
   ",", "933", ",", "935", ",", "937", ",", "939", ",", "941", ",", "943", 
   ",", "945", ",", "947", ",", "949", ",", "951", ",", "953", ",", "955", 
   ",", "959", ",", "961", ",", "967", ",", "971", ",", "973", ",", "977", 
   ",", "979", ",", "983", ",", "989", ",", "991", ",", "995", ",", "997", 
   ",", "1003", ",", "1007", ",", "1009", ",", "1013", ",", "1019", ",", 
   "1021", ",", "1027", ",", "1031", ",", "1037", ",", "1039", ",", "1043", 
   ",", "1051", ",", "1055", ",", "1061", ",", "1063", ",", "1067", ",", 
   "1069", ",", "1073", ",", "1075", ",", "1079", ",", "1081", ",", "1087", 
   ",", "1091", ",", "1093", ",", "1097", ",", "1099", ",", "1103", ",", 
   "1109", ",", "1111", ",", "1115", ",", "1117", ",", "1123", ",", "1127", 
   ",", "1129", ",", "1133", ",", "1135", ",", "1139", ",", "1147", ",", 
   "1151", ",", "1157", ",", "1159", ",", "1163", ",", "1171", ",", "1175", 
   ",", "1177", ",", "1181", ",", "1183", ",", "1187", ",", "1189", ",", 
   "1193", ",", "1195", ",", "1199", ",", "1201", ",", "1207", ",", "1211", 
   ",", "1213", ",", "1219", ",", "1223", ",", "1229", ",", "1231", ",", 
   "1235", ",", "1237", ",", "1241", ",", "1243", ",", "1247", ",", "1255", 
   ",", "1259", ",", "1261", ",", "1267", ",", "1271", ",", "1273", ",", 
   "1277", ",", "1279", ",", "1283", ",", "1289", ",", "1291", ",", "1301", 
   ",", "1303", ",", "1307", ",", "1315", ",", "1319", ",", "1321", ",", 
   "1327", ",", "1331", ",", "1333", ",", "1339", ",", "1343", ",", "1349", 
   ",", "1351", ",", "1355", ",", "1357", ",", "1363", ",", "1367", ",", 
   "1369", ",", "1373", ",", "1375", ",", "1379", ",", "1381", ",", "1387", 
   ",", "1391", ",", "1397", ",", "1399", ",", "1403", ",", "1411", ",", 
   "1415", ",", "1417", ",", "1423", ",", "1427", ",", "1429", ",", "1433", 
   ",", "1439", ",", "1441", ",", "1447", ",", "1451", ",", "1453", ",", 
   "1457", ",", "1459", ",", "1463", ",", "1469", ",", "1471", ",", "1475", 
   ",", "1481", ",", "1483", ",", "1487", ",", "1493", ",", "1499", ",", 
   "1501", ",", "1507", ",", "1511", ",", "1513", ",", "1519", ",", "1523", 
   ",", "1529", ",", "1531", ",", "1535", ",", "1537", ",", "1541", ",", 
   "1543", ",", "1547", ",", "1549", ",", "1555", ",", "1559", ",", "1567", 
   ",", "1571", ",", "1573", ",", "1577", ",", "1579", ",", "1583", ",", 
   "1591", ",", "1597", ",", "1601", ",", "1603", ",", "1607", ",", "1609", 
   ",", "1613", ",", "1619", ",", "1621", ",", "1627", ",", "1633", ",", 
   "1637", ",", "1639", ",", "1643", ",", "1651", ",", "1657", ",", "1661", 
   ",", "1667", ",", "1669", ",", "1691", ",", "1697", ",", "1699", ",", 
   "1703", ",", "1709", ",", "1711", ",", "1717", ",", "1721", ",", "1723", 
   ",", "1727", ",", "1733", ",", "1739", ",", "1741", ",", "1747", ",", 
   "1753", ",", "1759", ",", "1763", ",", "1769", ",", "1787", ",", "1789", 
   ",", "1793", ",", "1801", ",", "1807", ",", "1811", ",", "1817", ",", 
   "1819", ",", "1823", ",", "1829", ",", "1831", ",", "1837", ",", "1843", 
   ",", "1849", ",", "1853", ",", "1859", ",", "1861", ",", "1867", ",", 
   "1871", ",", "1877", ",", "1889", ",", "1891", ",", "1901", ",", "1903", 
   ",", "1907", ",", "1909", ",", "1919", ",", "1921", ",", "1931", ",", 
   "1933", ",", "1949", ",", "1951", ",", "1957", ",", "1961", ",", "1963", 
   ",", "1969", ",", "1973", ",", "1979", ",", "1987", ",", "1993", ",", 
   "1997", ",", "1999", ",", "2003", ",", "2011", ",", "2017", ",", "2021", 
   ",", "2027", ",", "2029", ",", "2041", ",", "2047", ",", "2053", ",", 
   "2057", ",", "2059", ",", "2063", ",", "2069", ",", "2071", ",", "2077", 
   ",", "2081", ",", "2083", ",", "2087", ",", "2099", ",", "2101", ",", 
   "2111", ",", "2113", ",", "2117", ",", "2123", ",", "2131", ",", "2137", 
   ",", "2141", ",", "2143", ",", "2153", ",", "2159", ",", "2167", ",", 
   "2171", ",", "2173", ",", "2179", ",", "2189", ",", "2197", ",", "2201", 
   ",", "2203", ",", "2207", ",", "2209", ",", "2213", ",", "2221", ",", 
   "2227", ",", "2231", ",", "2237", ",", "2239", ",", "2243", ",", "2249", 
   ",", "2251", ",", "2263", ",", "2267", ",", "2269", ",", "2273", ",", 
   "2281", ",", "2287", ",", "2291", ",", "2299", ",", "2327", ",", "2329", 
   ",", "2333", ",", "2339", ",", "2341", ",", "2347", ",", "2351", ",", 
   "2357", ",", "2363", ",", "2369", ",", "2371", ",", "2377", ",", "2383", 
   ",", "2389", ",", "2393", ",", "2399", ",", "2419", ",", "2423", ",", 
   "2431", ",", "2437", ",", "2447", ",", "2453", ",", "2459", ",", "2461", 
   ",", "2467", ",", "2473", ",", "2479", ",", "2483", ",", "2489", ",", 
   "2491", ",", "2497", ",", "2501", ",", "2507", ",", "2519", ",", "2521", 
   ",", "2531", ",", "2533", ",", "2537", ",", "2539", ",", "2549", ",", 
   "2551", ",", "2561", ",", "2563", ",", "2579", ",", "2581", ",", "2587", 
   ",", "2591", ",", "2593", ",", "2599", ",", "2603", ",", "2623", ",", 
   "2627", ",", "2629", ",", "2633", ",", "2647", ",", "2651", ",", "2657", 
   ",", "2659", ",", "2671", ",", "2677", ",", "2683", ",", "2687", ",", 
   "2689", ",", "2693", ",", "2699", ",", "2701", ",", "2707", ",", "2711", 
   ",", "2717", ",", "2729", ",", "2731", ",", "2741", ",", "2743", ",", 
   "2747", ",", "2753", ",", "2761", ",", "2767", ",", "2771", ",", "2773", 
   ",", "2783", ",", "2789", ",", "2797", ",", "2803", ",", "2809", ",", 
   "2819", ",", "2827", ",", "2831", ",", "2837", ",", "2839", ",", "2843", 
   ",", "2851", ",", "2857", ",", "2861", ",", "2867", ",", "2869", ",", 
   "2873", ",", "2879", ",", "2893", ",", "2899", ",", "2903", ",", "2911", 
   ",", "2917", ",", "2957", ",", "2959", ",", "2963", ",", "2971", ",", 
   "2977", ",", "2981", ",", "2987", ",", "2993", ",", "2999", ",", "3001", 
   ",", "3007", ",", "3013", ",", "3019", ",", "3023", ",", "3029", ",", 
   "3049", ",", "3053", ",", "3061", ",", "3067", ",", "3077", ",", "3083", 
   ",", "3089", ",", "3091", ",", "3097", ",", "3103", ",", "3109", ",", 
   "3113", ",", "3119", ",", "3127", ",", "3131", ",", "3137", ",", "3149", 
   ",", "3151", ",", "3161", ",", "3163", ",", "3167", ",", "3169", ",", 
   "3179", ",", "3181", ",", "3191", ",", "3193", ",", "3209", ",", "3211", 
   ",", "3217", ",", "3221", ",", "3223", ",", "3229", ",", "3253", ",", 
   "3257", ",", "3259", ",", "3263", ",", "3277", ",", "3281", ",", "3287", 
   ",", "3289", ",", "3301", ",", "3307", ",", "3317", ",", "3319", ",", 
   "3323", ",", "3329", ",", "3331", ",", "3341", ",", "3347", ",", "3359", 
   ",", "3361", ",", "3371", ",", "3373", ",", "3383", ",", "3391", ",", 
   "3397", ",", "3401", ",", "3403", ",", "3413", ",", "3419", ",", "3427", 
   ",", "3433", ",", "3439", ",", "3449", ",", "3457", ",", "3461", ",", 
   "3467", ",", "3469", ",", "3473", ",", "3481", ",", "3487", ",", "3491", 
   ",", "3499", ",", "3503", ",", "3509", ",", "3523", ",", "3533", ",", 
   "3541", ",", "3547", ",", "3587", ",", "3589", ",", "3593", ",", "3601", 
   ",", "3607", ",", "3611", ",", "3617", ",", "3623", ",", "3629", ",", 
   "3631", ",", "3637", ",", "3643", ",", "3653", ",", "3659", ",", "3679", 
   ",", "3683", ",", "3691", ",", "3707", ",", "3713", ",", "3719", ",", 
   "3721", ",", "3727", ",", "3733", ",", "3739", ",", "3743", ",", "3749", 
   ",", "3757", ",", "3767", ",", "3779", ",", "3781", ",", "3791", ",", 
   "3793", ",", "3797", ",", "3799", ",", "3809", ",", "3811", ",", "3821", 
   ",", "3823", ",", "3839", ",", "3841", ",", "3847", ",", "3851", ",", 
   "3853", ",", "3859", ",", "3883", ",", "3887", ",", "3893", ",", "3907", 
   ",", "3911", ",", "3917", ",", "3919", ",", "3931", ",", "3947", ",", 
   "3949", ",", "3959", ",", "3971", ",", "3977", ",", "3989", ",", "3991", 
   ",", "4001", ",", "4003", ",", "4013", ",", "4021", ",", "4027", ",", 
   "4031", ",", "4033", ",", "4043", ",", "4049", ",", "4057", ",", "4063", 
   ",", "4069", ",", "4079", ",", "4087", ",", "4091", ",", "4097", ",", 
   "4099", ",", "4103", ",", "4111", ",", "4117", ",", "4121", ",", "4129", 
   ",", "4133", ",", "4139", ",", "4153", ",", "4163", ",", "4171", ",", 
   "4177", ",", "4217", ",", "4219", ",", "4223", ",", "4231", ",", "4237", 
   ",", "4241", ",", "4247", ",", "4253", ",", "4259", ",", "4261", ",", 
   "4267", ",", "4283", ",", "4309", ",", "4313", ",", "4321", ",", "4343", 
   ",", "4349", ",", "4351", ",", "4357", ",", "4363", ",", "4369", ",", 
   "4373", ",", "4379", ",", "4387", ",", "4397", ",", "4409", ",", "4411", 
   ",", "4421", ",", "4423", ",", "4427", ",", "4429", ",", "4439", ",", 
   "4451", ",", "4453", ",", "4469", ",", "4471", ",", "4477", ",", "4483", 
   ",", "4489", ",", "4513", ",", "4517", ",", "4523", ",", "4537", ",", 
   "4541", ",", "4547", ",", "4549", ",", "4561", ",", "4577", ",", "4579", 
   ",", "4589", ",", "4601", ",", "4607", ",", "4619", ",", "4621", ",", 
   "4631", ",", "4633", ",", "4643", ",", "4651", ",", "4661", ",", "4663", 
   ",", "4673", ",", "4679", ",", "4687", ",", "4693", ",", "4699", ",", 
   "4709", ",", "4717", ",", "4727", ",", "4733", ",", "4741", ",", "4747", 
   ",", "4751", ",", "4759", ",", "4763", ",", "4769", ",", "4783", ",", 
   "4801", ",", "4807", ",", "4847", ",", "4853", ",", "4861", ",", "4867", 
   ",", "4871", ",", "4877", ",", "4883", ",", "4891", ",", "4939", ",", 
   "4943", ",", "4951", ",", "4973", ",", "4979", ",", "4981", ",", "4987", 
   ",", "4999", ",", "5003", ",", "5009", ",", "5017", ",", "5027", ",", 
   "5039", ",", "5041", ",", "5051", ",", "5053", ",", "5057", ",", "5059", 
   ",", "5069", ",", "5083", ",", "5099", ",", "5101", ",", "5107", ",", 
   "5113", ",", "5119", ",", "5143", ",", "5147", ",", "5153", ",", "5167", 
   ",", "5171", ",", "5177", ",", "5179", ",", "5191", ",", "5207", ",", 
   "5219", ",", "5231", ",", "5237", ",", "5249", ",", "5251", ",", "5261", 
   ",", "5263", ",", "5273", ",", "5281", ",", "5291", ",", "5293", ",", 
   "5303", ",", "5309", ",", "5317", ",", "5323", ",", "5329", ",", "5339", 
   ",", "5347", ",", "5357", ",", "5363", ",", "5371", ",", "5377", ",", 
   "5381", ",", "5389", ",", "5393", ",", "5399", ",", "5413", ",", "5431", 
   ",", "5437", ",", "5477", ",", "5483", ",", "5491", ",", "5497", ",", 
   "5501", ",", "5507", ",", "5513", ",", "5573", ",", "5581", ",", "5603", 
   ",", "5611", ",", "5629", ",", "5633", ",", "5639", ",", "5647", ",", 
   "5669", ",", "5671", ",", "5683", ",", "5687", ",", "5689", ",", "5699", 
   ",", "5713", ",", "5731", ",", "5737", ",", "5743", ",", "5749", ",", 
   "5773", ",", "5777", ",", "5783", ",", "5797", ",", "5801", ",", "5807", 
   ",", "5821", ",", "5837", ",", "5849", ",", "5861", ",", "5867", ",", 
   "5881", ",", "5891", ",", "5893", ",", "5903", ",", "5911", ",", "5921", 
   ",", "5923", ",", "5933", ",", "5939", ",", "5947", ",", "5953", ",", 
   "5959", ",", "5969", ",", "5987", ",", "5993", ",", "6007", ",", "6011", 
   ",", "6019", ",", "6023", ",", "6029", ",", "6043", ",", "6061", ",", 
   "6067", ",", "6107", ",", "6121", ",", "6131", ",", "6203", ",", "6211", 
   ",", "6233", ",", "6241", ",", "6259", ",", "6263", ",", "6269", ",", 
   "6277", ",", "6299", ",", "6301", ",", "6317", ",", "6329", ",", "6343", 
   ",", "6361", ",", "6367", ",", "6373", ",", "6379", ",", "6403", ",", 
   "6407", ",", "6413", ",", "6427", ",", "6431", ",", "6437", ",", "6451", 
   ",", "6467", ",", "6497", ",", "6509", ",", "6533", ",", "6541", ",", 
   "6551", ",", "6553", ",", "6563", ",", "6583", ",", "6589", ",", "6599", 
   ",", "6617", ",", "6623", ",", "6637", ",", "6653", ",", "6673", ",", 
   "6691", ",", "6697", ",", "6737", ",", "6751", ",", "6757", ",", "6761", 
   ",", "6773", ",", "6871", ",", "6889", ",", "6893", ",", "6907", ",", 
   "6931", ",", "6947", ",", "6949", ",", "6973", ",", "6997", ",", "7003", 
   ",", "7009", ",", "7037", ",", "7057", ",", "7061", ",", "7067", ",", 
   "7109", ",", "7121", ",", "7141", ",", "7181", ",", "7213", ",", "7229", 
   ",", "7253", ",", "7283", ",", "7321", ",", "7327", ",", "7367", ",", 
   "7381", ",", "7391", ",", "7493", ",", "7501", ",", "7519", ",", "7577", 
   ",", "7589", ",", "7603", ",", "7627", ",", "7673", ",", "7687", ",", 
   "7691", ",", "7739", ",", "7757", ",", "7769", ",", "7771", ",", "7801", 
   ",", "7813", ",", "7849", ",", "7859", ",", "7877", ",", "7883", ",", 
   "7933", ",", "8011", ",", "8021", ",", "8123", ",", "8149", ",", "8159", 
   ",", "8191", ",", "8219", ",", "8251", ",", "8269", ",", "8303", ",", 
   "8317", ",", "8401", ",", "8431", ",", "8441", ",", "8443", ",", "8473", 
   ",", "8581", ",", "8587", ",", "8627", ",", "8651", ",", "8663", ",", 
   "8837", ",", "8839", ",", "8887", ",", "8923", ",", "8933", ",", "8951", 
   ",", "8957", ",", "9017", ",", "9061", ",", "9071", ",", "9073", ",", 
   "9109", ",", "9137", ",", "9211", ",", "9391", ",", "9419", ",", "9467", 
   ",", "9517", ",", "9587", ",", "9617", ",", "9701", ",", "9733", ",", 
   "10331", ",", "10363", ",", "10471", ",", "10541", ",", "10679", ",", 
   "10951", ",", "10993", ",", "11591", ",", "11801", ",", "12013", ",", 
   "12361", ",", "12407", ",", "12569", ",", "12619", ",", "12731", ",", 
   "12851", ",", "13037", ",", "13297", ",", "13309", ",", "13621", ",", 
   "13829", ",", "13879", ",", "14143", ",", "14251", ",", "14297", ",", 
   "15371", ",", "15557", ",", "16187", ",", "17261", ",", "17891", ",", 
   "18437", ",", "19067", ",", "20161"}], "}"}]], "Output",
 CellChangeTimes->{3.583421499256342*^9, 3.58342186674936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["AbundantSums"], "Input",
 CellChangeTimes->{{3.583421509044186*^9, 3.583421514437838*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{404., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "24", ",", "30", ",", "32", ",", "36", ",", "42", ",", "48", ",", 
           "52", ",", "54", ",", "60", ",", "66", ",", "68", ",", "72", ",", 
           "78", ",", "82", ",", "84", ",", "90", ",", "92", ",", "96", ",", 
           "100", ",", "102", ",", "108", ",", "112", ",", "114", ",", "116", 
           ",", "120", ",", "124", ",", 
           RowBox[{"\[LeftSkeleton]", "53819", "\[RightSkeleton]"}], ",", 
           "56194", ",", "56196", ",", "56200", ",", "56202", ",", "56204", 
           ",", "56206", ",", "56198", ",", "56208", ",", "56212", ",", 
           "56214", ",", "56210", ",", "56218", ",", "56220", ",", "56216", 
           ",", "56222", ",", "56224", ",", "56226", ",", "56230", ",", 
           "56232", ",", "56228", ",", "56234", ",", "56236", ",", "56238", 
           ",", "56240", ",", "56242", ",", "56244"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{68., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 53, 24984121467248874504, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{71., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 53, 24984121467248874504, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{111., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 53, 24984121467248874504, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{107., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[53]]], "Output",
 CellChangeTimes->{3.58342151484678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{"AbundantSums", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.583421668653998*^9, 3.583421687031288*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.583421688833305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Not", "[", 
  RowBox[{"MemberQ", "[", 
   RowBox[{"AbundantSums", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834217158893213`*^9, 3.5834217282970963`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.583421728602758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "MemberQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834217303472223`*^9, 3.5834217376528463`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MemberQ", "::", "argtu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MemberQ\\)\[NoBreak] called with 1 \
argument; \[NoBreak]\\!\\(2\\)\[NoBreak] or \[NoBreak]\\!\\(3\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argtu\\\", ButtonNote -> \
\\\"MemberQ::argtu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5834217420652313`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MemberQ", "::", "argtu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MemberQ\\)\[NoBreak] called with 1 \
argument; \[NoBreak]\\!\\(2\\)\[NoBreak] or \[NoBreak]\\!\\(3\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argtu\\\", ButtonNote -> \
\\\"MemberQ::argtu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5834217421047993`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.583421742107236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
    "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
    ",", "22", ",", "23", ",", "25", ",", "26", ",", "27", ",", "28", ",", 
    "29", ",", "31", ",", "33", ",", "34", ",", "35", ",", "37", ",", "39", 
    ",", "41", ",", "43", ",", "45", ",", "46", ",", "47", ",", "49", ",", 
    "51", ",", "53", ",", "55", ",", "57", ",", "59", ",", "61", ",", "63", 
    ",", "65", ",", "67", ",", "69", ",", "71", ",", "73", ",", "75", ",", 
    "77", ",", "79", ",", "81", ",", "83", ",", "85", ",", "87", ",", "89", 
    ",", "91", ",", "93", ",", "95", ",", "97", ",", "99", ",", "101", ",", 
    "103", ",", "105", ",", "107", ",", "109", ",", "111", ",", "113", ",", 
    "115", ",", "117", ",", "119", ",", "121", ",", "123", ",", "125", ",", 
    "127", ",", "129", ",", "131", ",", "133", ",", "135", ",", "137", ",", 
    "139", ",", "141", ",", "143", ",", "145", ",", "147", ",", "149", ",", 
    "151", ",", "153", ",", "155", ",", "157", ",", "159", ",", "161", ",", 
    "163", ",", "165", ",", "167", ",", "169", ",", "171", ",", "173", ",", 
    "175", ",", "177", ",", "179", ",", "181", ",", "183", ",", "185", ",", 
    "187", ",", "189", ",", "191", ",", "193", ",", "195", ",", "197", ",", 
    "199", ",", "201", ",", "203", ",", "205", ",", "207", ",", "209", ",", 
    "211", ",", "213", ",", "215", ",", "217", ",", "219", ",", "221", ",", 
    "223", ",", "225", ",", "227", ",", "229", ",", "231", ",", "233", ",", 
    "235", ",", "237", ",", "239", ",", "241", ",", "243", ",", "245", ",", 
    "247", ",", "249", ",", "251", ",", "253", ",", "255", ",", "257", ",", 
    "259", ",", "261", ",", "263", ",", "265", ",", "267", ",", "269", ",", 
    "271", ",", "273", ",", "275", ",", "277", ",", "279", ",", "281", ",", 
    "283", ",", "285", ",", "287", ",", "289", ",", "291", ",", "293", ",", 
    "295", ",", "297", ",", "299", ",", "301", ",", "303", ",", "305", ",", 
    "307", ",", "309", ",", "311", ",", "313", ",", "315", ",", "317", ",", 
    "319", ",", "321", ",", "323", ",", "325", ",", "327", ",", "329", ",", 
    "331", ",", "333", ",", "335", ",", "337", ",", "339", ",", "341", ",", 
    "343", ",", "345", ",", "347", ",", "349", ",", "351", ",", "353", ",", 
    "355", ",", "357", ",", "359", ",", "361", ",", "363", ",", "365", ",", 
    "367", ",", "369", ",", "371", ",", "373", ",", "375", ",", "377", ",", 
    "379", ",", "381", ",", "383", ",", "385", ",", "387", ",", "389", ",", 
    "391", ",", "393", ",", "395", ",", "397", ",", "399", ",", "401", ",", 
    "403", ",", "405", ",", "407", ",", "409", ",", "411", ",", "413", ",", 
    "415", ",", "417", ",", "419", ",", "421", ",", "423", ",", "425", ",", 
    "427", ",", "429", ",", "431", ",", "433", ",", "435", ",", "437", ",", 
    "439", ",", "441", ",", "443", ",", "445", ",", "447", ",", "449", ",", 
    "451", ",", "453", ",", "455", ",", "457", ",", "459", ",", "461", ",", 
    "463", ",", "465", ",", "467", ",", "469", ",", "471", ",", "473", ",", 
    "475", ",", "477", ",", "479", ",", "481", ",", "483", ",", "485", ",", 
    "487", ",", "489", ",", "491", ",", "493", ",", "495", ",", "497", ",", 
    "499", ",", "501", ",", "503", ",", "505", ",", "507", ",", "509", ",", 
    "511", ",", "513", ",", "515", ",", "517", ",", "519", ",", "521", ",", 
    "523", ",", "525", ",", "527", ",", "529", ",", "531", ",", "533", ",", 
    "535", ",", "537", ",", "539", ",", "541", ",", "543", ",", "545", ",", 
    "547", ",", "549", ",", "551", ",", "553", ",", "555", ",", "557", ",", 
    "559", ",", "561", ",", "563", ",", "565", ",", "567", ",", "569", ",", 
    "571", ",", "573", ",", "575", ",", "577", ",", "579", ",", "581", ",", 
    "583", ",", "585", ",", "587", ",", "589", ",", "591", ",", "593", ",", 
    "595", ",", "597", ",", "599", ",", "601", ",", "603", ",", "605", ",", 
    "607", ",", "609", ",", "611", ",", "613", ",", "615", ",", "617", ",", 
    "619", ",", "621", ",", "623", ",", "625", ",", "627", ",", "629", ",", 
    "631", ",", "633", ",", "635", ",", "637", ",", "639", ",", "641", ",", 
    "643", ",", "645", ",", "647", ",", "649", ",", "651", ",", "653", ",", 
    "655", ",", "657", ",", "659", ",", "661", ",", "663", ",", "665", ",", 
    "667", ",", "669", ",", "671", ",", "673", ",", "675", ",", "677", ",", 
    "679", ",", "681", ",", "683", ",", "685", ",", "687", ",", "689", ",", 
    "691", ",", "693", ",", "695", ",", "697", ",", "699", ",", "701", ",", 
    "703", ",", "705", ",", "707", ",", "709", ",", "711", ",", "713", ",", 
    "715", ",", "717", ",", "719", ",", "721", ",", "723", ",", "725", ",", 
    "727", ",", "729", ",", "731", ",", "733", ",", "735", ",", "737", ",", 
    "739", ",", "741", ",", "743", ",", "745", ",", "747", ",", "749", ",", 
    "751", ",", "753", ",", "755", ",", "757", ",", "759", ",", "761", ",", 
    "763", ",", "765", ",", "767", ",", "769", ",", "771", ",", "773", ",", 
    "775", ",", "777", ",", "779", ",", "781", ",", "783", ",", "785", ",", 
    "787", ",", "789", ",", "791", ",", "793", ",", "795", ",", "797", ",", 
    "799", ",", "801", ",", "803", ",", "805", ",", "807", ",", "809", ",", 
    "811", ",", "813", ",", "815", ",", "817", ",", "819", ",", "821", ",", 
    "823", ",", "825", ",", "827", ",", "829", ",", "831", ",", "833", ",", 
    "835", ",", "837", ",", "839", ",", "841", ",", "843", ",", "845", ",", 
    "847", ",", "849", ",", "851", ",", "853", ",", "855", ",", "857", ",", 
    "859", ",", "861", ",", "863", ",", "865", ",", "867", ",", "869", ",", 
    "871", ",", "873", ",", "875", ",", "877", ",", "879", ",", "881", ",", 
    "883", ",", "885", ",", "887", ",", "889", ",", "891", ",", "893", ",", 
    "895", ",", "897", ",", "899", ",", "901", ",", "903", ",", "905", ",", 
    "907", ",", "909", ",", "911", ",", "913", ",", "915", ",", "917", ",", 
    "919", ",", "921", ",", "923", ",", "925", ",", "927", ",", "929", ",", 
    "931", ",", "933", ",", "935", ",", "937", ",", "939", ",", "941", ",", 
    "943", ",", "945", ",", "947", ",", "949", ",", "951", ",", "953", ",", 
    "955", ",", "959", ",", "961", ",", "967", ",", "971", ",", "973", ",", 
    "977", ",", "979", ",", "983", ",", "989", ",", "991", ",", "995", ",", 
    "997", ",", "1003", ",", "1007", ",", "1009", ",", "1013", ",", "1019", 
    ",", "1021", ",", "1027", ",", "1031", ",", "1037", ",", "1039", ",", 
    "1043", ",", "1051", ",", "1055", ",", "1061", ",", "1063", ",", "1067", 
    ",", "1069", ",", "1073", ",", "1075", ",", "1079", ",", "1081", ",", 
    "1087", ",", "1091", ",", "1093", ",", "1097", ",", "1099", ",", "1103", 
    ",", "1109", ",", "1111", ",", "1115", ",", "1117", ",", "1123", ",", 
    "1127", ",", "1129", ",", "1133", ",", "1135", ",", "1139", ",", "1147", 
    ",", "1151", ",", "1157", ",", "1159", ",", "1163", ",", "1171", ",", 
    "1175", ",", "1177", ",", "1181", ",", "1183", ",", "1187", ",", "1189", 
    ",", "1193", ",", "1195", ",", "1199", ",", "1201", ",", "1207", ",", 
    "1211", ",", "1213", ",", "1219", ",", "1223", ",", "1229", ",", "1231", 
    ",", "1235", ",", "1237", ",", "1241", ",", "1243", ",", "1247", ",", 
    "1255", ",", "1259", ",", "1261", ",", "1267", ",", "1271", ",", "1273", 
    ",", "1277", ",", "1279", ",", "1283", ",", "1289", ",", "1291", ",", 
    "1301", ",", "1303", ",", "1307", ",", "1315", ",", "1319", ",", "1321", 
    ",", "1327", ",", "1331", ",", "1333", ",", "1339", ",", "1343", ",", 
    "1349", ",", "1351", ",", "1355", ",", "1357", ",", "1363", ",", "1367", 
    ",", "1369", ",", "1373", ",", "1375", ",", "1379", ",", "1381", ",", 
    "1387", ",", "1391", ",", "1397", ",", "1399", ",", "1403", ",", "1411", 
    ",", "1415", ",", "1417", ",", "1423", ",", "1427", ",", "1429", ",", 
    "1433", ",", "1439", ",", "1441", ",", "1447", ",", "1451", ",", "1453", 
    ",", "1457", ",", "1459", ",", "1463", ",", "1469", ",", "1471", ",", 
    "1475", ",", "1481", ",", "1483", ",", "1487", ",", "1493", ",", "1499", 
    ",", "1501", ",", "1507", ",", "1511", ",", "1513", ",", "1519", ",", 
    "1523", ",", "1529", ",", "1531", ",", "1535", ",", "1537", ",", "1541", 
    ",", "1543", ",", "1547", ",", "1549", ",", "1555", ",", "1559", ",", 
    "1567", ",", "1571", ",", "1573", ",", "1577", ",", "1579", ",", "1583", 
    ",", "1591", ",", "1597", ",", "1601", ",", "1603", ",", "1607", ",", 
    "1609", ",", "1613", ",", "1619", ",", "1621", ",", "1627", ",", "1633", 
    ",", "1637", ",", "1639", ",", "1643", ",", "1651", ",", "1657", ",", 
    "1661", ",", "1667", ",", "1669", ",", "1691", ",", "1697", ",", "1699", 
    ",", "1703", ",", "1709", ",", "1711", ",", "1717", ",", "1721", ",", 
    "1723", ",", "1727", ",", "1733", ",", "1739", ",", "1741", ",", "1747", 
    ",", "1753", ",", "1759", ",", "1763", ",", "1769", ",", "1787", ",", 
    "1789", ",", "1793", ",", "1801", ",", "1807", ",", "1811", ",", "1817", 
    ",", "1819", ",", "1823", ",", "1829", ",", "1831", ",", "1837", ",", 
    "1843", ",", "1849", ",", "1853", ",", "1859", ",", "1861", ",", "1867", 
    ",", "1871", ",", "1877", ",", "1889", ",", "1891", ",", "1901", ",", 
    "1903", ",", "1907", ",", "1909", ",", "1919", ",", "1921", ",", "1931", 
    ",", "1933", ",", "1949", ",", "1951", ",", "1957", ",", "1961", ",", 
    "1963", ",", "1969", ",", "1973", ",", "1979", ",", "1987", ",", "1993", 
    ",", "1997", ",", "1999", ",", "2003", ",", "2011", ",", "2017", ",", 
    "2021", ",", "2027", ",", "2029", ",", "2041", ",", "2047", ",", "2053", 
    ",", "2057", ",", "2059", ",", "2063", ",", "2069", ",", "2071", ",", 
    "2077", ",", "2081", ",", "2083", ",", "2087", ",", "2099", ",", "2101", 
    ",", "2111", ",", "2113", ",", "2117", ",", "2123", ",", "2131", ",", 
    "2137", ",", "2141", ",", "2143", ",", "2153", ",", "2159", ",", "2167", 
    ",", "2171", ",", "2173", ",", "2179", ",", "2189", ",", "2197", ",", 
    "2201", ",", "2203", ",", "2207", ",", "2209", ",", "2213", ",", "2221", 
    ",", "2227", ",", "2231", ",", "2237", ",", "2239", ",", "2243", ",", 
    "2249", ",", "2251", ",", "2263", ",", "2267", ",", "2269", ",", "2273", 
    ",", "2281", ",", "2287", ",", "2291", ",", "2299", ",", "2327", ",", 
    "2329", ",", "2333", ",", "2339", ",", "2341", ",", "2347", ",", "2351", 
    ",", "2357", ",", "2363", ",", "2369", ",", "2371", ",", "2377", ",", 
    "2383", ",", "2389", ",", "2393", ",", "2399", ",", "2419", ",", "2423", 
    ",", "2431", ",", "2437", ",", "2447", ",", "2453", ",", "2459", ",", 
    "2461", ",", "2467", ",", "2473", ",", "2479", ",", "2483", ",", "2489", 
    ",", "2491", ",", "2497", ",", "2501", ",", "2507", ",", "2519", ",", 
    "2521", ",", "2531", ",", "2533", ",", "2537", ",", "2539", ",", "2549", 
    ",", "2551", ",", "2561", ",", "2563", ",", "2579", ",", "2581", ",", 
    "2587", ",", "2591", ",", "2593", ",", "2599", ",", "2603", ",", "2623", 
    ",", "2627", ",", "2629", ",", "2633", ",", "2647", ",", "2651", ",", 
    "2657", ",", "2659", ",", "2671", ",", "2677", ",", "2683", ",", "2687", 
    ",", "2689", ",", "2693", ",", "2699", ",", "2701", ",", "2707", ",", 
    "2711", ",", "2717", ",", "2729", ",", "2731", ",", "2741", ",", "2743", 
    ",", "2747", ",", "2753", ",", "2761", ",", "2767", ",", "2771", ",", 
    "2773", ",", "2783", ",", "2789", ",", "2797", ",", "2803", ",", "2809", 
    ",", "2819", ",", "2827", ",", "2831", ",", "2837", ",", "2839", ",", 
    "2843", ",", "2851", ",", "2857", ",", "2861", ",", "2867", ",", "2869", 
    ",", "2873", ",", "2879", ",", "2893", ",", "2899", ",", "2903", ",", 
    "2911", ",", "2917", ",", "2957", ",", "2959", ",", "2963", ",", "2971", 
    ",", "2977", ",", "2981", ",", "2987", ",", "2993", ",", "2999", ",", 
    "3001", ",", "3007", ",", "3013", ",", "3019", ",", "3023", ",", "3029", 
    ",", "3049", ",", "3053", ",", "3061", ",", "3067", ",", "3077", ",", 
    "3083", ",", "3089", ",", "3091", ",", "3097", ",", "3103", ",", "3109", 
    ",", "3113", ",", "3119", ",", "3127", ",", "3131", ",", "3137", ",", 
    "3149", ",", "3151", ",", "3161", ",", "3163", ",", "3167", ",", "3169", 
    ",", "3179", ",", "3181", ",", "3191", ",", "3193", ",", "3209", ",", 
    "3211", ",", "3217", ",", "3221", ",", "3223", ",", "3229", ",", "3253", 
    ",", "3257", ",", "3259", ",", "3263", ",", "3277", ",", "3281", ",", 
    "3287", ",", "3289", ",", "3301", ",", "3307", ",", "3317", ",", "3319", 
    ",", "3323", ",", "3329", ",", "3331", ",", "3341", ",", "3347", ",", 
    "3359", ",", "3361", ",", "3371", ",", "3373", ",", "3383", ",", "3391", 
    ",", "3397", ",", "3401", ",", "3403", ",", "3413", ",", "3419", ",", 
    "3427", ",", "3433", ",", "3439", ",", "3449", ",", "3457", ",", "3461", 
    ",", "3467", ",", "3469", ",", "3473", ",", "3481", ",", "3487", ",", 
    "3491", ",", "3499", ",", "3503", ",", "3509", ",", "3523", ",", "3533", 
    ",", "3541", ",", "3547", ",", "3587", ",", "3589", ",", "3593", ",", 
    "3601", ",", "3607", ",", "3611", ",", "3617", ",", "3623", ",", "3629", 
    ",", "3631", ",", "3637", ",", "3643", ",", "3653", ",", "3659", ",", 
    "3679", ",", "3683", ",", "3691", ",", "3707", ",", "3713", ",", "3719", 
    ",", "3721", ",", "3727", ",", "3733", ",", "3739", ",", "3743", ",", 
    "3749", ",", "3757", ",", "3767", ",", "3779", ",", "3781", ",", "3791", 
    ",", "3793", ",", "3797", ",", "3799", ",", "3809", ",", "3811", ",", 
    "3821", ",", "3823", ",", "3839", ",", "3841", ",", "3847", ",", "3851", 
    ",", "3853", ",", "3859", ",", "3883", ",", "3887", ",", "3893", ",", 
    "3907", ",", "3911", ",", "3917", ",", "3919", ",", "3931", ",", "3947", 
    ",", "3949", ",", "3959", ",", "3971", ",", "3977", ",", "3989", ",", 
    "3991", ",", "4001", ",", "4003", ",", "4013", ",", "4021", ",", "4027", 
    ",", "4031", ",", "4033", ",", "4043", ",", "4049", ",", "4057", ",", 
    "4063", ",", "4069", ",", "4079", ",", "4087", ",", "4091", ",", "4097", 
    ",", "4099", ",", "4103", ",", "4111", ",", "4117", ",", "4121", ",", 
    "4129", ",", "4133", ",", "4139", ",", "4153", ",", "4163", ",", "4171", 
    ",", "4177", ",", "4217", ",", "4219", ",", "4223", ",", "4231", ",", 
    "4237", ",", "4241", ",", "4247", ",", "4253", ",", "4259", ",", "4261", 
    ",", "4267", ",", "4283", ",", "4309", ",", "4313", ",", "4321", ",", 
    "4343", ",", "4349", ",", "4351", ",", "4357", ",", "4363", ",", "4369", 
    ",", "4373", ",", "4379", ",", "4387", ",", "4397", ",", "4409", ",", 
    "4411", ",", "4421", ",", "4423", ",", "4427", ",", "4429", ",", "4439", 
    ",", "4451", ",", "4453", ",", "4469", ",", "4471", ",", "4477", ",", 
    "4483", ",", "4489", ",", "4513", ",", "4517", ",", "4523", ",", "4537", 
    ",", "4541", ",", "4547", ",", "4549", ",", "4561", ",", "4577", ",", 
    "4579", ",", "4589", ",", "4601", ",", "4607", ",", "4619", ",", "4621", 
    ",", "4631", ",", "4633", ",", "4643", ",", "4651", ",", "4661", ",", 
    "4663", ",", "4673", ",", "4679", ",", "4687", ",", "4693", ",", "4699", 
    ",", "4709", ",", "4717", ",", "4727", ",", "4733", ",", "4741", ",", 
    "4747", ",", "4751", ",", "4759", ",", "4763", ",", "4769", ",", "4783", 
    ",", "4801", ",", "4807", ",", "4847", ",", "4853", ",", "4861", ",", 
    "4867", ",", "4871", ",", "4877", ",", "4883", ",", "4891", ",", "4939", 
    ",", "4943", ",", "4951", ",", "4973", ",", "4979", ",", "4981", ",", 
    "4987", ",", "4999", ",", "5003", ",", "5009", ",", "5017", ",", "5027", 
    ",", "5039", ",", "5041", ",", "5051", ",", "5053", ",", "5057", ",", 
    "5059", ",", "5069", ",", "5083", ",", "5099", ",", "5101", ",", "5107", 
    ",", "5113", ",", "5119", ",", "5143", ",", "5147", ",", "5153", ",", 
    "5167", ",", "5171", ",", "5177", ",", "5179", ",", "5191", ",", "5207", 
    ",", "5219", ",", "5231", ",", "5237", ",", "5249", ",", "5251", ",", 
    "5261", ",", "5263", ",", "5273", ",", "5281", ",", "5291", ",", "5293", 
    ",", "5303", ",", "5309", ",", "5317", ",", "5323", ",", "5329", ",", 
    "5339", ",", "5347", ",", "5357", ",", "5363", ",", "5371", ",", "5377", 
    ",", "5381", ",", "5389", ",", "5393", ",", "5399", ",", "5413", ",", 
    "5431", ",", "5437", ",", "5477", ",", "5483", ",", "5491", ",", "5497", 
    ",", "5501", ",", "5507", ",", "5513", ",", "5573", ",", "5581", ",", 
    "5603", ",", "5611", ",", "5629", ",", "5633", ",", "5639", ",", "5647", 
    ",", "5669", ",", "5671", ",", "5683", ",", "5687", ",", "5689", ",", 
    "5699", ",", "5713", ",", "5731", ",", "5737", ",", "5743", ",", "5749", 
    ",", "5773", ",", "5777", ",", "5783", ",", "5797", ",", "5801", ",", 
    "5807", ",", "5821", ",", "5837", ",", "5849", ",", "5861", ",", "5867", 
    ",", "5881", ",", "5891", ",", "5893", ",", "5903", ",", "5911", ",", 
    "5921", ",", "5923", ",", "5933", ",", "5939", ",", "5947", ",", "5953", 
    ",", "5959", ",", "5969", ",", "5987", ",", "5993", ",", "6007", ",", 
    "6011", ",", "6019", ",", "6023", ",", "6029", ",", "6043", ",", "6061", 
    ",", "6067", ",", "6107", ",", "6121", ",", "6131", ",", "6203", ",", 
    "6211", ",", "6233", ",", "6241", ",", "6259", ",", "6263", ",", "6269", 
    ",", "6277", ",", "6299", ",", "6301", ",", "6317", ",", "6329", ",", 
    "6343", ",", "6361", ",", "6367", ",", "6373", ",", "6379", ",", "6403", 
    ",", "6407", ",", "6413", ",", "6427", ",", "6431", ",", "6437", ",", 
    "6451", ",", "6467", ",", "6497", ",", "6509", ",", "6533", ",", "6541", 
    ",", "6551", ",", "6553", ",", "6563", ",", "6583", ",", "6589", ",", 
    "6599", ",", "6617", ",", "6623", ",", "6637", ",", "6653", ",", "6673", 
    ",", "6691", ",", "6697", ",", "6737", ",", "6751", ",", "6757", ",", 
    "6761", ",", "6773", ",", "6871", ",", "6889", ",", "6893", ",", "6907", 
    ",", "6931", ",", "6947", ",", "6949", ",", "6973", ",", "6997", ",", 
    "7003", ",", "7009", ",", "7037", ",", "7057", ",", "7061", ",", "7067", 
    ",", "7109", ",", "7121", ",", "7141", ",", "7181", ",", "7213", ",", 
    "7229", ",", "7253", ",", "7283", ",", "7321", ",", "7327", ",", "7367", 
    ",", "7381", ",", "7391", ",", "7493", ",", "7501", ",", "7519", ",", 
    "7577", ",", "7589", ",", "7603", ",", "7627", ",", "7673", ",", "7687", 
    ",", "7691", ",", "7739", ",", "7757", ",", "7769", ",", "7771", ",", 
    "7801", ",", "7813", ",", "7849", ",", "7859", ",", "7877", ",", "7883", 
    ",", "7933", ",", "8011", ",", "8021", ",", "8123", ",", "8149", ",", 
    "8159", ",", "8191", ",", "8219", ",", "8251", ",", "8269", ",", "8303", 
    ",", "8317", ",", "8401", ",", "8431", ",", "8441", ",", "8443", ",", 
    "8473", ",", "8581", ",", "8587", ",", "8627", ",", "8651", ",", "8663", 
    ",", "8837", ",", "8839", ",", "8887", ",", "8923", ",", "8933", ",", 
    "8951", ",", "8957", ",", "9017", ",", "9061", ",", "9071", ",", "9073", 
    ",", "9109", ",", "9137", ",", "9211", ",", "9391", ",", "9419", ",", 
    "9467", ",", "9517", ",", "9587", ",", "9617", ",", "9701", ",", "9733", 
    ",", "10331", ",", "10363", ",", "10471", ",", "10541", ",", "10679", ",",
     "10951", ",", "10993", ",", "11591", ",", "11801", ",", "12013", ",", 
    "12361", ",", "12407", ",", "12569", ",", "12619", ",", "12731", ",", 
    "12851", ",", "13037", ",", "13297", ",", "13309", ",", "13621", ",", 
    "13829", ",", "13879", ",", "14143", ",", "14251", ",", "14297", ",", 
    "15371", ",", "15557", ",", "16187", ",", "17261", ",", "17891", ",", 
    "18437", ",", "19067", ",", "20161"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.583421890755307*^9, 3.5834218921219177`*^9}}],

Cell[BoxData["4179871"], "Output",
 CellChangeTimes->{3.583421892836205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1000000", "/", 
  RowBox[{"9", "!"}]}]], "Input",
 CellChangeTimes->{{3.583422398617319*^9, 3.5834224014921217`*^9}}],

Cell[BoxData[
 FractionBox["3125", "1134"]], "Output",
 CellChangeTimes->{3.5834224022931004`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["3125", "1134"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.5834224057676687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1000000", "-", 
  RowBox[{"2", "*", 
   RowBox[{"9", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.5834224151955853`*^9, 3.58342241807259*^9}, {
  3.58342248204567*^9, 3.583422484458847*^9}}],

Cell[BoxData["274240"], "Output",
 CellChangeTimes->{3.583422419601294*^9, 3.5834224851966248`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["3125", "1134"], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"274240", "/", 
  RowBox[{"8", "!"}]}]], "Input",
 CellChangeTimes->{{3.583422546483485*^9, 3.5834225472196627`*^9}}],

Cell[BoxData[
 FractionBox["857", "126"]], "Output",
 CellChangeTimes->{3.583422548516263*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["857", "126"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["6.801587301587301`"], "Output",
 CellChangeTimes->{3.5834225637897367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["857", "126"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.583422550107049*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"274240", "-", 
  RowBox[{"6", "*", 
   RowBox[{"8", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583422587664081*^9, 3.583422590492634*^9}}],

Cell[BoxData["32320"], "Output",
 CellChangeTimes->{3.583422590901011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"274240", "-", 
  RowBox[{"7", "*", 
   RowBox[{"8", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583422597183655*^9, 3.583422597343567*^9}}],

Cell[BoxData[
 RowBox[{"-", "8000"}]], "Output",
 CellChangeTimes->{3.583422597742828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"32320", "/", 
  RowBox[{"7", "!"}]}]], "Input",
 CellChangeTimes->{{3.5834226222134743`*^9, 3.58342262444549*^9}}],

Cell[BoxData[
 FractionBox["404", "63"]], "Output",
 CellChangeTimes->{3.5834226275176764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["404", "63"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.583422631576558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"32320", "/", 
  RowBox[{"7", "!"}]}]], "Input",
 CellChangeTimes->{{3.583422703658393*^9, 3.58342270415292*^9}, 
   3.5834227382688*^9}],

Cell[BoxData[
 FractionBox["404", "63"]], "Output",
 CellChangeTimes->{3.583422704521064*^9, 3.58342273875191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["404", "9"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["44.888888888888886`"], "Output",
 CellChangeTimes->{3.58342270918966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"32320", "-", 
  RowBox[{"6", "*", 
   RowBox[{"7", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583423110413897*^9, 3.583423113451288*^9}}],

Cell[BoxData["2080"], "Output",
 CellChangeTimes->{3.583423123001116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2080", "/", 
  RowBox[{"6", "!"}]}]], "Input",
 CellChangeTimes->{{3.5834231641895857`*^9, 3.5834231718632708`*^9}}],

Cell[BoxData[
 FractionBox["26", "9"]], "Output",
 CellChangeTimes->{{3.5834231688040133`*^9, 3.5834231723711977`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["26", "9"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.5834231740601377`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2080", "-", 
  RowBox[{"2", "*", 
   RowBox[{"6", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583423193273592*^9, 3.5834232455458183`*^9}}],

Cell[BoxData["640"], "Output",
 CellChangeTimes->{{3.5834231967613087`*^9, 3.583423245873979*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"640", "/", 
  RowBox[{"5", "!"}]}]], "Input",
 CellChangeTimes->{{3.583423257785501*^9, 3.583423259188222*^9}}],

Cell[BoxData[
 FractionBox["16", "3"]], "Output",
 CellChangeTimes->{3.583423259662198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["16", "3"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.583423261446227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"640", "-", 
  RowBox[{"5", "*", 
   RowBox[{"5", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.5834233070749407`*^9, 3.583423309823238*^9}}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{3.583423310688735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"40", "/", 
  RowBox[{"4", "!"}]}]], "Input",
 CellChangeTimes->{{3.583423337845821*^9, 3.5834233392993727`*^9}}],

Cell[BoxData[
 FractionBox["5", "3"]], "Output",
 CellChangeTimes->{3.5834233396903543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["5", "3"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5834233427970333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"274240", "/", 
  RowBox[{"8", "!"}]}]], "Input",
 CellChangeTimes->{{3.5834260240213137`*^9, 3.5834260321311617`*^9}}],

Cell[BoxData[
 FractionBox["857", "126"]], "Output",
 CellChangeTimes->{3.5834260330945177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["857", "126"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.583426034982716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"274240", "-", 
  RowBox[{"6", "*", 
   RowBox[{"8", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583426048619719*^9, 3.583426052447008*^9}}],

Cell[BoxData["32320"], "Output",
 CellChangeTimes->{3.583426052889615*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"32320", "/", 
  RowBox[{"7", "!"}]}]], "Input",
 CellChangeTimes->{{3.583426097216796*^9, 3.5834260996218557`*^9}}],

Cell[BoxData[
 FractionBox["404", "63"]], "Output",
 CellChangeTimes->{3.583426099936521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["404", "63"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.58342610134525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"32320", "-", 
  RowBox[{"6", "*", 
   RowBox[{"7", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583426103155937*^9, 3.583426110397745*^9}}],

Cell[BoxData["2080"], "Output",
 CellChangeTimes->{3.5834261109102163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  RowBox[{"2080", "/", 
   RowBox[{"6", "!"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.58342616266492*^9, 3.583426172248616*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.583426172512397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2080", "-", 
  RowBox[{"2", "*", 
   RowBox[{"6", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.583426184378866*^9, 3.583426187968747*^9}}],

Cell[BoxData["640"], "Output",
 CellChangeTimes->{3.583426188317594*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"640", "/", 
  RowBox[{"5", "!"}]}]], "Input",
 CellChangeTimes->{{3.58342625050633*^9, 3.583426251412073*^9}}],

Cell[BoxData[
 FractionBox["16", "3"]], "Output",
 CellChangeTimes->{3.5834262518800983`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  FractionBox["16", "3"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.5834262554434233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"640", "-", 
  RowBox[{"5", "*", 
   RowBox[{"5", "!"}]}]}]], "Input",
 CellChangeTimes->{{3.5834262685935707`*^9, 3.583426271864142*^9}}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{3.58342627220833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  RowBox[{"40", "/", 
   RowBox[{"4", "!"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583426332599246*^9, 3.583426343961463*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5834263442001257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "!"}]], "Input",
 CellChangeTimes->{{3.583426348042804*^9, 3.583426348244712*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.583426348361623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", 
  RowBox[{"16", "/", 
   RowBox[{"3", "!"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5834263892721767`*^9, 3.583426395475389*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.583426395703858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"1", "+", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.583426817936397*^9, 3.5834268214425077`*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"1", "+", "2"}], "]"}]], "Output",
 CellChangeTimes->{3.583426821673773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"1", "+", "2"}], "]"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.5834268250184603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.583426831583271*^9, 3.583426834280325*^9}}],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.583426834612934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"IntegerDigits", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583426838119302*^9, 3.583426845165893*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.583426845498187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.583426863912781*^9, 3.583426891059123*^9}, {
  3.583426983364889*^9, 3.583426985341486*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.583426985626362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "2.5", "]"}]], "Input",
 CellChangeTimes->{{3.583426986366317*^9, 3.583426992183127*^9}}],

Cell[BoxData["1.4893065462657091`"], "Output",
 CellChangeTimes->{3.583426992515332*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"5", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.583426993957556*^9, 3.583427027095731*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "4"]}]], "Output",
 CellChangeTimes->{{3.583427015890115*^9, 3.583427027673893*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.583428100923274*^9, 3.583428106115776*^9}}],

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "n", "]"}]], "Output",
 CellChangeTimes->{3.583428106372655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"10", ",", 
   RowBox[{"FunctionExpand", "[", 
    RowBox[{"Fibonacci", "[", "x", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583428133412657*^9, 3.583428161280264*^9}},
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ")"}], "x"], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["2", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}]], ")"}], "x"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], 
    SqrtBox["5"]], "]"}], 
  RowBox[{"Log", "[", "10", "]"}]]], "Output",
 CellChangeTimes->{{3.5834281099279823`*^9, 3.583428161955831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}]}], ")"}], "x"], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["2", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}]], ")"}], "x"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], 
      SqrtBox["5"]], "]"}], 
    RowBox[{"Log", "[", "10", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4000", ",", "5000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583428185089082*^9, 3.583428206512002*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0HtUjHkcBvBULquGWtFR0m3TphVpXXbb9Exqabqa0sqwJiGKcmajG93Y
Lu/c3ko4OyxyqV0y77xva5Ft7aYml5MmKpdNhiSRnZpWatH+9o/vec7nj+ec
53ydN6YIN5uamJiEkfs/bzSdMzWBGuOWeprdnkWhWeU8+Sjxn8H9K4QOFHTJ
B62/5KuRL1LL2ojv2eQ6pQaoYZrjM+Ov2RR6xFHLegNJv9HX44UTBbORkYyW
YOLo0AgzNwpfeawYOB5FvHOHask8CtXF+i5+ghpjlWqf434UgqZ42ehK1DhB
tfE+j6NwS/TH14pLavSUO63Znk/hfoO0b99jNfY+2dTyvoLsG7kgiR/P4OIJ
weCqRgruu0L+tp/J4FDx6v2C5xRErUm2WV4MHLrHXR1vIUXrb+7pu5czMOZU
eth5SXGVN/HepG8YJAVKzO6ES1HsL3nK386AynpUEC6R4nqbyWvrXAahD1My
k8ukCBud651dxkC8Z1T1nJPirInesaSKgS09J8G1Q4q8pMs83ysMJLfSKsze
SuF90bFSqmOwKyux8Iy9DG5lThnpPQy0STE/VCyTgW4NFLwbYVC7P8Fh+QYZ
2o1DjXOmahBjZSc4ky9DWUZTQK+LBgevDfRUn5TBU++eGLlUg6yXifPStTJM
6HC5ER2mgTqq84SqT4ZYb76HQaxBcXdqQbyFHAU7Xvos3K3BhN5qm9decnhO
ueRnQWnwqY3lNIdIOab5ueTmHtVAlRfvf3qnHO1htslHWA24uHXTDWVyWNXP
F0U0apCcmCnqqpHDze6useqhBrpnX4SU3JNj79i0hh8NGuRWDG498q8cocFp
5Z7mLNoLW96EzFLgTeoW6w0zWbR0RXjV+StgOz5D5jGPRYp4qO2uWIE9ru6g
wWK9S+nZwDwFal3jjh1dzcIQo5ubdkoBSVHde/42Fh41i+zCGxQwv105UZ7N
YuJ+X+55rwK8zBqrlFIWRXu2XHGbrEQst07Yf5rF2guU8cpcJXKbaf+Pa1no
NkbenRGuxOzwXs/mZhb9S3zdpqcocUh9s35BN4vzOVrH9lIloo4JDswfYVE3
KWyl4RclCo2v4hssOUguDz8+365EuYd91zgXDjcfLXddMKqE/bXtsW2LODwr
f9D3M49G96tYy6BgDpadU0V9DjSKhlsTRd9yKOic7iSdT+PklpSmSRIOQomX
wwd/GrsjVp4WE/NGZ9AryCcES53zLxJfzxszLSEe/OiO79bvOASUtPS68mkE
VC9Wa1M5+DCSmuAAGnrj+/KCNA42ry+ElAfScMyTxZvv5dCxzT/zs2DS37YZ
64hLB9z7dxE3Cpc51BCHZ1iJfydO/sTQHp/NQVukDxIKaNRpowT1ORx+rdxn
nR5CY/0Ue+/8fA6Hn2mr6sNoLBg28h4QR+9g7HnhNMwf3+rz3sfB6p/Dihji
c5rsU3riIvPE1BfE76Kf2PK/55DpaompkTRa/GqHDhMvPjvEriE+NeeAzkA8
uLDTrYI49G2Q9HgBh6SA8xaLVtFw0s/e+pbY/cbB7GzioevDgZGFHJ6uyhnQ
EjexLc5VxMfuJ2yyFtJQqX76MEYsiovsWEv8H6SSQzA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{4000., 840.},
  Method->{},
  PlotRange->{{4000, 5000}, {835.6010802628008, 1044.5887119826718`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5834281709841137`*^9, 3.5834282075197287`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox["5"]}], ")"}]}], ")"}], "x"], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["2", 
            RowBox[{"1", "+", 
             SqrtBox["5"]}]], ")"}], "x"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], 
       SqrtBox["5"]], "]"}], 
     RowBox[{"Log", "[", "10", "]"}]], "\[Equal]", "1000"}], ",", "x", ",", 
   "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.58342822316591*^9, 3.583428254981526*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.583428344425702*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}]}], ")"}], "x"], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["2", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}]], ")"}], "x"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], 
      SqrtBox["5"]], "]"}], 
    RowBox[{"Log", "[", "10", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4780", ",", "4790"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583428354493541*^9, 3.5834283824341784`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0n0w23ccB/AsbqmZh3CNh5oRq+Fat85TaUi+HoIxz2etoqMe5mlahFFa
Rlnq4X7KMGtpN8xOpSVYyWZsso2G7rRYzKZrEeqazcNquKi9/fG+973++tx9
7s0+ey4knk6j0fyR/S5NVaPROsTk+r/uTgv2FImR0Ef3/cg8ULgIu6jTq1+C
zYIj5Ap4vZl2WA1uFWXmPIWjZne9GXBHQkvf37C97xalCUvkLztvw/OWSlMj
ePa7EWdtB4qQ+WmeLWxUEsBxgq3SuvsT4TsFiYE1cMX9uPprMIsdd3oZDjFq
yxqHtcOCJBxHivBz1ivVRGLC3vA9Ugf3dOhpOMJ0J8uaFTj4OWcoFd5T6Gp6
HadIkNVm9pcwZaWcuQHLjpVcnYSVzPamDVjgb6LQuC0mCbFZggAnijTwyppc
4duR5m7NsNlrwpPn4CvLg2c34SlNyrcVLphLqQ1ypgjjYfIXv8Geedvft8Bx
okBb7Tti8kZR7fYefDjjp2EP+FNj8yvhJygSrcnsz4InI6p0RPA9SezyLfgY
Q6vtAIcindyKvDk44mSKQyQsnR7wYXWKyQ09+eRd+ER4ob4fnBPtMKrrQpGj
XQY+F2GzMEFPPPyuSV93N/yk+4fOIXj5jE2xAs7sX21muVJEUWYXatglJvXB
zGeJsK7MPSoAngrl8ofhvr/elBXCj1X+tQZcilRqHMy8C6szUzczYOnr1cZK
WNp7oWMM/kh90dJULCZ+9JRwMx5FTjHc0sLgtb4kgzy4dybdUAjH6vuO/QoL
6u2G++FkhvG0OcHekl60/QOXR++s5sP3mE2r7G4xyYv5lj4BR495ZZ6CS8fK
LI66USQjShpeDp+Z4/A+hhXyB2QAHin6UzQJCxNXYjbgwKuVNm+5U+Sr8WmF
RQ/26mXaUgyve421RsL6CYNHHsE320Piq+FDhkHqzh64Py8SSuFn53+crYDN
39ZT7MAzdh5DS/BmqF+bTa+Y1DW2XnPxxP9jWEnvwwsNWzIKpoqW42phf9pp
rRU4LbdK+gt8WauRz+VTZNr6UusIXLx2a4AHc39PKR2FC6ckDm6wDsfbRwZf
apRbeMKdql3ZfTjb5iDDF14rSHk4BSf4l/8cBgtKvZ7Mw96Vud4fwn842g8v
wPx04WAa7LnEblmEPcLqj5+HWT678Uswz6TXMhP+5pWepyuws2j1QC78XwV7
bQ22Hv9g5DIc7arzYB226sompfCIUiXegC1rS/o+gT8LkAuew+yo5q/LYCcm
tbUFGynnhFXwzaH8mW1Yf0JJq4bV05MlOzCrV5VTA89M8PNVsO7FQ0l1sHuR
XdQurBdj/bgebrdlc1/AOnyn8AZYb17bdA/WtPae+By+UKPa2/erWu+9cx3+
H7HoTAg=
      "]]}}, 
   LineBox[{{4779.988002898891, 1000.0028605059176`}, {4788.002066440585, 
    1000.0028605059176`}}], 
   LineBox[{{4786.658391114788, 1000.0028605058128`}, {4786.658391114788, 
    998.3760801612523}}], 
   LineBox[{{4779.98800289745, 999.000828722505}, {4789.777637403472, 
    999.000828722505}}], 
   LineBox[{{4781.871547771771, 999.000828722505}, {4781.871547771771, 
    998.424761867324}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{4780., 998.6},
  ImagePadding->{{22.634694, 1.1}, {9.086476, 0.1}},
  ImageSize->{892., Automatic},
  Method->{},
  PlotRange->{{4779.791666666667, 4790.208333333333}, {998.5678963454392, 
   1000.7448508425214`}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.583428407517076*^9, 3.5834284198191032`*^9}, {
  3.5834284679775257`*^9, 3.583428475825036*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"Fibonacci", "[", "4785", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583428432781049*^9, 3.583428455078545*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{{3.583428437983322*^9, 3.583428455530345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"Fibonacci", "[", "4782", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583428481589068*^9, 3.583428506421277*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{{3.583428482101666*^9, 3.583428485933393*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "4782", "]"}]], "Input"],

Cell[BoxData[\
"10700662663827589367649805844573968850836838966321516650132352033753145206046\
940406218891475824897926578046948881775919574843364666725699595129960304612627\
480924821861440694330512347744427502737817530875793916661921492591867595539664\
228371489431130746995034395470019854326097230672901928705264472437261177158218\
255484911205250132014786129659313817922355596574520395061375514678375432291196\
021299340482607061753977068470682028954869026661854351245219003694806413574474\
709117076197669456910700980243934396174741037369125032313655321647736970231677\
550515951735184605799549194109677783732296657965816465139034881542563101842241\
902598460880001101862555502454939371136516570394476295847145485234259504285824\
253060835444354282126110089928637950480068943303097732178348645431132057656598\
684562886168087186938352973506439862976406600007235629179052070511640776148124\
918858309459405666883391093509444565763576661516193177537928916615813271596168\
77487983821820492520348473874384736771934512787029218636250627816"], "Output",\

 CellChangeTimes->{3.5834285112518*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextRecognize", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJylnNl2FFeWhmt190W/Rr9Cv0H3I1Rfd9tMtstlbMxkQzGDAAFmHgwIMSMG
CYRAEpIYNaB5HlKZKcDlbrtqLVdd1Bv0H/Hl+bWVuGq5SrFSWpGREWfY47/3
2Sf+beUXv/7on371q19t+Ff9+/WKr/5j/foVW/7rX/TlP7dsXLPyn3Xy7/o7
q7/sfHp6ulgsvs0PnRQKhVKppHP9L5fLb/JjYWFBX/XT7Ozs5OSkTnRF93Dd
d87NzU1NTamRH3744aeffvrxxx91j86///57GpxPh+757rvv/jc/9KCanZiY
0Ej0U19fn7pQyzQ4Pj6ur7pBV9SL/uvB/8uPd+/e6Yoa17l6+f3vf69faVx9
6VmNU18ZHg3qUI96kHOdqDWd6B5a/j4/dF0DVoNqWY1oUmNjYxqGWmMYnKgj
2tfNelZP+aL+6yvj1P2amhrR/5mZGTWoK/qVkS+f/mpZV7gTItO+vjJUPTUd
Dt/PNBfyQycam36F1JBUF0VGKAZJdY9u0OMQuZwfuiL6jIyMiImMUJ3SMo/o
HjUCiUx25qtf3Y6eYnhQSa3pcd38Q37ofjqCQQz7XX5Adr66ZbivZulFranl
yEHIhZwgAOasflI7EmCJ8R/+8Ad9VQvcoDuZOxORkCyf/qKYhoGUQgoGgHAi
gYwf4mswCJhIAVX1XyOhHYQcjVBTuqJf4YVuoB2mrNbUlL6Ojo4ODg4ODQ1J
3XQRYqJNGrBuVkd/+tOfJBVqE4HkV56FhvqvmyfyQ41AW/1H0xmMbhAHda6J
M1MkH0JBT36FbsxXvzJrfYW8cMEipGbVF3rH1GCBBiwmqkFdVL+2RUgFTNd0
lk9/fmJstKlezF8GbI1GrWy79F8j1H9RiWY1TkkdHHyXDhRNwxCPMBpYSGRb
XJACmn1Qw7KnMWucf/zjH22Ki/mBSOhZSMcVNYgUMSR1HYkMy6x00BBDpF81
YD2CnMQbIDhCYhPNT7popbDFY8qwgL64DYLrBsyszfvy6W/LhmrrHuQc76Ob
mRoDQPD0HzuJcYOJlmHGqUPnmC+UESOADbf3MdlhqxqB2iYvkzLZ5/IDStKm
SVHlgGK/llsNOHpkHkRa4K/Jzlc0iIOubTPVIDKG48Bp6pCwSfWsblBebRbC
ESVh+fRHwOxAbVVk2aQXOrEhwnYxWpwLNsfelkkxJFrTDRA2Tt8uAFOPzYH1
yBjWT+1DCuTWLFP7SCzyyUzhCL1gh2W4dLMpoAYRmCgJVc0yPDCDh6r2YZP5
xdTAFXwFXEElAw8sDO5Yw5C5wMKrRwZvkVsm/S2TbkFtYhyi5YGMYAM1KNqq
BSCKEaYxm8EVFDa6iAAmijoIEIPDBBm2yIKMgQTUxUx+wCNoJcqAMaA8NlP/
NRKRCzDMUDV40dBKZ77rxN4ZqdCdugiL5aDV1FR+wE1YZm2y20Ll1QUyhgsz
lh4eHoYyiCveVncun/4gDbeA99QwsLFWDdtkBEDODksF0WCQRqgBgz91g+5U
sxo5FIju3rqA8cRE6LoeL6YDv8B01AL+FNoa7eiKfoK/0WyqO1sGhg1JUXAj
E7gAAI6hBLRCnBTdaAoiCLNTy2pBtzEXUxiPJnarZfUrW0o8hb/QPZI0+IVt
Yb5qdvn0t/q/CweSb+ly3Ifko9GaUd+r5+1NDbcvnjT84Ck8I9Klx7E/kHE8
PzAOHI5rICaURzEx9UBZjUq/YouIL+iiCgmgYlHfDVcMIVA6DUPcR0fgC35Q
Nzt8gJhj+UGoy/Doxb7Sbl33oy9MFknDnkAixyzGKsuhv8ZpG2suI8xqBFNg
mhhCjI8Md7U0XTl56MCGj/d89sG+z1feu3JeUmqUGPvFyGDZoCe4Zaivu+XW
5fpv9h373brajR/Xbvzk5M5NN88d6+5qf5MOlAKN4HH0SycELBhGtMkKbjZZ
QkxSdJCZ2hT4QSaL1JmDDnk4h2Vw0CdM3KQrpYMukF7HAr7TfvDvpT981Llo
LgyvZqESUY/lhAidcx3TU5PP2loaLp46sWPDwfVrDny5Zv+6VXvXrtCnZt2q
of4+qYanw+PMBVeCmc3EslB4dOfGN1vWqpHaDR+pnZovVu77fIU+Ojnw5eqD
6z86veer16+eGVrDdGAJUJaYRcPOJGFoyJJjs4YKgwxNHyMWU97mGtEyfQD/
cJB8gpXacTRGAF/GwIgo1aORP3KiRkTn/v5+54gMuhDsX0J/Zxgw4JoRAINY
0pGjRQXdl78RJVsarl48tOvAerFstSicE1kcXJ0ov/Li4T24FZCJld3Aw7Dh
dfcLaZweFPfVWlU7uggH6aWtqcFAUcSUvBkSIP/6SWzt7e2NdthmjbAO++ZI
BIVCmBkS+lt1DmFJgumAPlE7nre1NN+6/OT+7ScP7rQ/uKtP1+PmyfExMIYt
of2yhq2hVukmY8AM/iz9YR/BGlKHkacLaIv7cFzmlNRAb3f90RoZt5yqa/LP
Ivug+Z61H+5d+6FOOlqaaMpmE1HBEWA6dPKio/XA+o+ks2icPjkf/VmdPhkf
9V+9tDbdRlDFO+naXDosw3AW3qEmmRoKO/X3Pm97+PjeTYnBiyePJ0ZHuAGi
4fXMIKeq4knkpn0cmvXo9jWGFz7ZFHqedSC30Q/GxKzteUyvoddV9EffHTjg
ImEfCIpkFK4Z4xalQkdrYwNssr6YzpBXP8G+I19/NpcHRHTBSGyO3Kxc56FN
v9Eje/KnEAAaRyqiPqoX0URaKcnp73mlEZJ7iROPIbZxfu+rF1dPHT644WM9
mze1SORTuzdLU5ggs7ZNczv4OxLsRBYw3fGjLt6tP5ezL+MgFMjZl5Gl/9Vz
LDAP0lrMYMSonAPE8j79cetYZgdNzgzoHBhGVBXlxE3dv3HJvslKwYmoKv+F
EOrrg+t1aLccU4zXyDJBcHV38fBuprw3Z1x+vuLo1i+arl7o7mzre97x4NpF
sZjrNM4ATu/9GtqCu5AN4MFMOsZzTNlw4VTO90UdRzX4QPNvD+4YHhwgKrdq
GKPCXKI5cCkzgpgawNXTRywSlmGTSNjM+DN6WCfKxL7LR2vkR45vW3dy54ZT
uzadq9l6/sC2M3u3nK353fmDO+StRKi6I3v1uXR0f/2xA9dOHxl+3RuXD6SP
iiMwznx9k6/sAIxBgOr3dt3pDKJUxoaCrOFE7NMHWunXseFBZMamwIJnGP+y
qyNx7UMYpPnWH9s/X6iMgYTJyGC/NLqKgzp52dkOEwUGBAmIqdFKfc3849iY
WJPMxSqbOFt+bAhtHtu+fmig3wFIlH/nkIkuURYAg3q6cHjP3ooBgX0r8Ai2
osP9fQgthpRQiGgI46kGj279HGeBLkBPbIVdCbSF/oc3f/pmoQwYg1AKJMVB
g3P1RU7PKT7s/7XTh9WI7Zsc4vkD25tvXGq9d0vtmzIXDu2KIYzTGpCCjJYQ
RePlc7nhXWnAeXLHBrkE0cqYH7z6oqMNwUAZsbpnarYppu7u7hbLQDJWFrh5
7uCOnLaLNjOZi0XGof578k/9sRpEAvsm2uJZaLy0dLEvE8vZ2YuHdjN+y5Xo
kJBAhYMTo8NeIQItszDhxMXkxESV4+CDiQjtr+Rct92rPxvznzT1NhxQ/n2f
e/nYfjWrwOFO3elXna2KAXCm+hp84qrOh40L4SAHaLjoBdyz+7ZEYmp496/X
ldICDYDfmc/Lxw9EHcwo//mKvt6ewcFBa41duY7Ga3W7P/vAlORzfPv6a6cO
S82PbfsSh7jUumZ6jRo6jmDYmA6IgwmdGB+TlQuPZxIiW5EHUx8GS7V6ZmoC
h2XHF2ME/R8ZeG3RsoBFoxHNCCo59LoHLGow40yy9T2mIr0y0veia2q8smpj
DCajd3jzb2K/96/VPbx1uaP53ujQAFEb60dqUExhPUiSsf/LRYQJU562PZrP
13BJ3TjFrcGoa0/KlG+7f5ekHOMspiXXoYEB4Vs4yPSPfPXb5+2PGDmYs/nW
laW4MWv25vmT4BlgLa2VwlI+lJfTPL5jw96EulG9C7U7X3a2wUEsBjolOUcB
o6SBZ/Dgvc87I++ScVi0w47X+Ah9Rfp7xWph6cFQndyz0ySz5FyHbnh857qD
weBfKgz99sD2vpfP5tPiDqZbXwf7X+/+7f+AMHMjnw1bgaFjHMcCjscPf/Vb
owU+1858QzoOeGbP1d/z8uTOjSigxiAsJKHFxhLtslClyCjiGd0s5BDja4yq
c0HQZKCv58iWz/dUFLxC58wCz86+7GgLWL1iEt/mc3EA5XQrGEzXnzTfC3FT
NpLHjQ2tTXc6W5pkzbqy//eePLgrV/X47g3FLPIpkf6OJmxC45IQftYrwqA1
3CKSL5N3bNu6qPtQw1KdmZd1qzoeNrKg4Iy3xBgORtkTrxnJQqoqiRDu0tEa
2pR84rlO790iLhP+YDEgERzvfHQfQ/3oznWy6xhYo8Hmm/VVAz6xc6NTWzEu
szj1vXohQcpc52cfOOi7LkHKJaej5b7ttp1aVV7FINa4rvHKhaBuqw5t/hQi
/xL6O9GE1zN+pjsrIHLOYkosKtCzL9pbggyvSE4qIITPPpA1y0x3X7e4U84X
5bMpTE0C7CMHJXVkvG3VGR4UkGtDJNSyuK9P7abfgL5ASuAuR+VkMGSjZmem
bcnFRxIy+ulO3ZkqQyqO4y9iEqmY1jFfPe3Io9fK7CC4MIDzco+bbud2e9H0
1W78pJyW8t9fZ2SEV04eCiF2ZrV0fXjgddej+7Jv0rv2+3eed7T9LP1jLtcp
I9ZKyPYgfvpJjwsz6CfGs5CWnhWqxEA+chD22dqc2bcVIjvvpxC7ioD3Lp/H
3UM0gwc0qOtxs6MPOKiTubxIA+I4b4mnQ1SwWvCUQJgF0OnJCbEjInad3/r2
hFMQpjBkedracmD9moh8Mo9/vS4Goa2Nt5NfqJgjKVQhHS7UqXIQ5/Zvjy7v
9J6vztZsjTmTLNHx2Qfy7De+PT45Nhrpj1IQ/DIGQip9xdpgTzR+Ko5Y4ANQ
CRILkzTfqBMjRMnjOzd1dz2ZmZ6SckmVZGrMzeDmXiItary3t/fErs1mMQOW
PDAe9Ag7oEc094GBAakAZFGbYt+unIOyF44HGT8+Tk95eciZXnHnx/woFubO
7NuyNHOecafnWSdSjUizaKh2Oh8/3Jfi1uT7Vj66c4PbbN9aGxti9k8icWTL
Wsjacvva/VtXWYdaSEtm5HxyYLwqPbg6QNCKXVWPu3NCZXD3q0+fPLhj+lOy
KPqIQTExhbG17/YgUWFiAa8wTo6NtDU2zOfeX/eIO4qmnz5pxX6K1HlokzHx
0d2bc6l+TE1dPX3EmI2IVWI2OTGOyfI6HXheA+tqbbFe7wGxr1ul61UcnAyH
ddMr75rRUO+r49vW2f0ZNMrPei0DsKFmoUzPsw5CM+NPYZ72ptuPhC6abne1
PnzR0apIpOHiqaWQcqW4IxBydOsXekRQxLYUamu0otXB9R/9LISICYcYtmio
LQ1X4gqv3Z/pzwElyZ/rOpCP+gTb3pi6L4VDz57bv805EIZ37/K3dITWt9xr
sPZZ8CTGsdqhkCocdNy/eQWFdRpc8d1MKkb1Wh4s04mrIDAvmVhOTd6+eCrl
WhdTbepX2FXu0snGuJaUidzsLHSOTE/uY4URMpON8Q7ZUXjx9PGDhVD3K9pq
eBK/7qdPzu7bGrBfJXjP8mzb19fk4YnXC/K0MK01/236Q4TZ3MsA4VzX6ro7
34ZXJeIzLqrPw/8gSJmbw+Nr5JLt/td9+ysIdnWSwCxdUMgTueATL47r/NyB
HXsWAXz2EQbANce0diFVfPX19VFrigHpevRANLGlAtNCFgnb5PiYRcXVF14B
0f/ztTsd8KKzcNDjCRxczFHEMOF528Py0iom1BxutktVf7cuG88XK2+dPzky
NAj9hwcHG+rO7AsLCiQzT+xYX0iBz8/SH0SBvhBAFfN6eCoxyJYIrvf3vCLd
JJcqtdVIKCkRDw5/9Zn1C/vTcvcmwqA75dfUeMP5E16AMABQWE3FBfquTnVn
24N7VW5In6etD8nzFFLtEMuvHBISBE/UqPtmn3VnMauzdoXs9oMb9Qt53drc
0sP4RGKgZu9fvxQM3aqU8lpcDkvquTpf5l4dfRkC3PX4gQ1LMZUU2pRltm50
VHZGNhkXHOn/4OaVFKFk+Wcck7x2IVWyVdEfiI7AePVTDeonsS8Dh3NzN84e
ExGEtXpePEUMWObOqiJ/+OHG2W88I8RVJ329PXZYrBvOTI4xHvsOpFcuUgEj
SYDpiTEp774vVjruRrzlYozr1CCCgd/EbgBH5Z6cCkgcrHiZW+dPjI8Og+sk
k3FFyUs5rDbqvL/75VKvtPKvcdBWuspBPGt/5JBwPpQNzCWbA+5ypXekv/40
i1TAUDHg965cwMJU0Z96/io5BJWhEROjwwJynouw6IPrl4RnMorNzLzqbFNE
QwqamdJpw4VTThpDMcLVxsvnwop8WLpav+bE9i+FAQA5wZ9WOCjwQLbf5RaQ
2n5W5x0PG6NspPTjmhtnvpkarywsOpEYs9aO+r2+r19vnD1af7TmfO0uWd0z
e7ec2r1Zdu/I12sPb/70YLYus7KKZaHH7DPY85IuyLB50dZZIOmUOy2lykbT
X51WLak0XDwdq6BhJTkZZ3TnUrWPp6leNOCYx3b0mvB2/GSOXj8d27Zubnbm
TarWJqmO5IhY8n01Sxdes1i4YitWLV1kqfR459JZDwmLAdCC2lnmeWLiRWd7
smaLpk+uUFjUK6qRX4RXb9/bS+VUP7lu50MQlUJen5OZ+kLh24M7qlDlhdqd
9Uf3QfmxwdeO4BgwqaSh171NVy8cz1Jba0b6F4tDquivONFeGFI036x3wlZj
YHUeV8JRTNt2nGfOasBmZ07v/bqSLqvODDsbs2QRv3bTb3qeP2XByCWRUIPE
kdRBoMsIgVQbmkswS6LDQVPzjUtepAOfs8VJBGHAujg4OFC7+dO9S5DPKmlK
T1f7yMDrseHB8ZEh2Y3pifGZqUlNar4w911gUyyrQC+c6HZ9tTnIMoHukZok
pFERNhnqbCW0s+3kzk3q14vvtN/38tn53F7xlKZ8+eg+kcjbKEz/mclxalrI
PPChusCHY3m2oWGEYTFa7/rzNwvlqydrnYG32bfeRYQm1owNDXgFJKYcSRqj
kiJjij4WzU5NZTWwknwDqcrRM31nzwSKqLx19Jel4K5eIOSPQsv5UqlbVPm6
w7vZexirU5CK+VR4Bg6BGlaicqpAw7nE7u7Una4skS8szOQhNllK6YsAUn9v
d1h0qNQdKd4pBkeZ5cSmp87s2xryD5QkrRwa6AecUHiJ9gE7MRReKOceF2pq
mhkQbWnCSeVSgaYsWWur3fSJYN5cPmVn0qbCsZBKvGy45LbO7P16/+I6LB4w
W1y4de7oi/YWVl1xc0AXgj5XANKLQN3BjZ/kNasrUg3PamtxsqurIgeF8Q5t
/LhcLGC+XFFAarH03o4Y17bNpRJuXT+1a1N0VfrIPLqawqpBhg3wDxpP+lVx
SSLCk/u3+189H+x92d5068T29bTpbLnO647snc+r0Si7FR0MhFx2Yi1+G/ba
YEvRUImKqFp/rEbk2vXpf8O7b7Z8fvn4wSzeTHvfHCA7smbKLFUQdhXSxh8d
I0MDLztaO5qzJZVnrQ+H+rrf5EGoc0RT+S4Mmc2h/HBhjKssWu41kDVNEdmS
xe738EbFeksNO5rvani0TKlANB1eoy+m/RqlVE8OaxSjJeBdabzp2kXzHTvv
/C0lKG/KpePbvowo11k+e43IXHhdu/GT0aFBhkTer7e3t4q8pVRetZC20fmn
YtiRx9dMBgYGRocHp/JttlZ/lzK+XbqxC2Mi40k1Dr7mTdiaGiMmgwrzCAF2
BrsqoytC1Z+o3V3JvFX8YCpi+TCsHSzqY4rQVytsVwsKJGWZJQkx0VFOFafO
tC+8t/e2q6Wx9e71u/XnBLyvnz16+UTtk4dNMEu0IsABdqIjakom7nX3SwqB
QsBbGVscZwIemTd/mmJG059tKRH5uAIqFjYXUn3yfF7P4NqJQirPK6SSjIWw
YzHGrVHdvO0La0AvatZZEa9luNDIHIwWgxQoGINUwIl8eXdpBiCGbKved465
c8nOx0aG4ypwVX4PeSb9GKXxXdiY6UVAB5Vcccrd2VdHAYP9rxWk2CY4erJz
NLgVlpZ1/YX0r0IyDjbZmFBIWz/YB1cKbxiIMmALvJBeOOClZKeYnM7CvFAI
5CVColpk3tbYLGMW8bxSnjs5MS2LMD42MTYqzDkzOSE4NzU2MjrYP9DzSpZ5
sPfVQPcLBUfdXU+6u9q7u9rkEZ61NgudRr1jcQ3HjdiTaSQBUgybQd6EXWC2
vVGSY1zmuc+lGlrd1vusQ9FHXCu3DmbLHF+vvXv5vOb0y+lPWhhBmk7b1siT
MFqHpUwkilwp1JYwPNaziARxptFFxjVrwg1mZyQfM+rGRcaHJnIsF3QR10J6
GcXb9CKIt2FjUTnVAZLvLYf1dO50CRx4iXS3bPV82G9bChug/gYHo4J4LvHm
bKlodKTzYWPjlfP1xw9eOXlI8cjDhqsvO9snc079XfSPK5LYCrYSu8CjmCpX
4c77njRKgkNjr75ZE/UrCTHdQ/ncfF4VwK4WJu4ikyr4Z6A4m17s4AH4lQuI
KJZEzZbTGz/86gPMBRvDNTCQDFjRyUnssxccdf4m7Ba3hYxp9jjUUqhaX0jv
yiinNy2U89IF70OkqeXT3zJfSvu4vai0EHZeMOZy2nUSpxO9vPGM5+UKrqm0
B5anHHDN5WjW4irCknVx0B1vqOpLkuAdMfPhZQKeCHM3JUmtLKS3E3jFip8Y
D36WvIcOW85Yu1LI37ARKWODPB/Wv2bTPhqanU31jfOpuD3anH+Y/k4S+n70
l4yENcjGwZmW2aV7aVkfNwwopv2tHnBEDsW0Pcf5QAMDG/kI4NUpdHCAb88e
TVwpLD+9S69kMQiBTREMR2H2UVpa4Pd+DtyS6TqKGAiXw9KSYTbcn0/7IEqp
hAbdXCb9y6lEp7S0XLmQXj30bunrO1g0ZACIDYfTUHYWpfTKDufkvZ5ezNew
wHsxwzCd76cj3IbX9m7kAw1QXVbhoruFpbVnVZu2zEFDxGiuHVCUU2WRS22n
wz4LK7gBmBnEshf7KHF8UJs3ORTSBvDIkWJ4JcJy6P+z1ux9JLCQXlX0Luxn
nw97n92g0aYLNmbCjjzLPE4ftGA0NZeX6JATns63BjjVEJG/xR7Pa93B00E3
C7PJYiBn5Y3qY87GxtWpQTUqyfZhwbDIyvmUTRUHyykxrtZIbb3NX9AxF16x
Mp+2lEbr/Q/Tv/xX9qgaQviGUqpqI2ESXwNSSIvIsYJoJrxtYC69HWIuvO7M
631+HRA9zqdkMuMp5qsSM6F4shxeVxWDynJ6IZKdFBTzqCBUIdX6FsIuabPV
BhxoKmaxXZd+qWdmA1EMga2DsG8m3wCFIgNgLLrRd9gtLof+wEJkjFchMfeZ
VLNtFwY0ApaAuiHIXNqXV0h7ScppO/a79MqRctjnZS2gEsNYtJxWkebDwijy
FqsKLQ9Q3m/rKi59X1AsBy2nWn2QZyFsoZ1ZWvkWBQBi0s780vd0QR9Y7KKj
kfyYCm8RscH0sza53FbK3wmwTPrHF8vEPcsmFy14YOWUtLRTszA7lMABvUtv
eYq7oUupAK+UlgaIEC38CykTbkhWTNslotFDK3XwzplyeH1TxMCFdDhCL6a6
WaZAqDWbKnbK4fVEyE/EuhZC+qJAuj8/XKtDSQ9rMfaAFsvi0vcavclXbZZJ
f++eNi8Ym/MqPEJ3xMs/G028TRvYHVMj/MwlXoeeEWJ5ahoYvoOCVURX/cqU
xalFDLkQds9Np7XsCDidrOAVfOX0FkRXOc6kdyFOpTdOzIYqxN7eXp3oorfn
l1NF+lR6y8HAwAAvICrlO15F0j//+c8//fQTiQIDYDtBHgdjL5/+0Yt5P9ps
XllUCnUIb9Mi1OzP7c0p5NVT5fTWvjdpv7Dx1XfhpXB0FPMbxiG65y9/+Qtv
9ZzN9zZ6XQxGxBUKox2k2nhyNn8LJQLA6gacwna5zJLX8dk+z6esF8qLjxZr
aLm49C0iCM9s2NvilJFryd7mKzKOgpk+alVMawoz6e1Py6G/gbGRD0x3s4bQ
5bSrmkYKKWLFyVYlr7Dt5VS9/zZsap4POVIOB1/UCRTzdUwo7ET3TDhmw+Gs
ml0PdIOzprAd39uw68epsO/CK3pMW4gfI7tiyMCjLLQ/G5ZHWR+ki/n0ylMQ
VyHVJEeHuHz6/z8ekDQY
     "], {{0, 50}, {150, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{552.5, Automatic},
   ImageSizeRaw->{150, 50},
   PlotRange->{{0, 150}, {0, 50}}], "]"}]], "Input",
 CellChangeTimes->{{3.5834286656357393`*^9, 3.5834286682655993`*^9}}],

Cell[BoxData["\<\"50245\"\>"], "Output",
 CellChangeTimes->{{3.5834286700544233`*^9, 3.583428678689579*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "15"}]], "Input",
 CellChangeTimes->{{3.5834288830899467`*^9, 3.5834288834636*^9}}],

Cell[BoxData[
 FractionBox["1", "15"]], "Output",
 CellChangeTimes->{3.5834288839362803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1", "15"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.06666666666666667`"], "Output",
 CellChangeTimes->{3.583428886044694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "27"}]], "Input",
 CellChangeTimes->{{3.5834344963287497`*^9, 3.583434496958499*^9}}],

Cell[BoxData[
 FractionBox["1", "27"]], "Output",
 CellChangeTimes->{3.583434497647505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1", "21"], "]"}]], "Input",
 CellChangeTimes->{3.583434510162404*^9},
 NumberMarks->False],

Cell[BoxData["0.047619047619047616`"], "Output",
 CellChangeTimes->{{3.583434500013834*^9, 3.583434512005293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "21"], ",", "20"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.047619047619047619047619047619047619047619047619047619048`20.\
"], "Output",
 CellChangeTimes->{3.583434515454192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplicativeOrder", "[", 
  RowBox[{"10", ",", "21"}], "]"}]], "Input",
 CellChangeTimes->{{3.583434528567601*^9, 3.583434531530253*^9}, {
  3.583434562068584*^9, 3.583434569863841*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.583434570222658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "150"], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834345989007483`*^9, 3.5834346190182734`*^9}}],

Cell[BoxData["0.006666666666666666666666666666666666666666666666666666667`20.\
"], "Output",
 CellChangeTimes->{{3.583434600277708*^9, 3.583434619535694*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "150"], ",", "24"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.006666666666666666666666666666666666666666666666666666667`24.\
"], "Output",
 CellChangeTimes->{3.583434658574469*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", 
   RowBox[{"2", ",", "999"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5834346500617867`*^9, 3.583434660584413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relativeprimeto10", "=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", "999"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"GCD", "[", 
       RowBox[{"#", ",", "10"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.583434661966097*^9, 3.583434705224422*^9}, {
   3.583434907512825*^9, 3.583434910573944*^9}, 3.5834353454070253`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "7", ",", "9", ",", "11", ",", "13", ",", "17", ",", "19", ",", 
   "21", ",", "23", ",", "27", ",", "29", ",", "31", ",", "33", ",", "37", 
   ",", "39", ",", "41", ",", "43", ",", "47", ",", "49", ",", "51", ",", 
   "53", ",", "57", ",", "59", ",", "61", ",", "63", ",", "67", ",", "69", 
   ",", "71", ",", "73", ",", "77", ",", "79", ",", "81", ",", "83", ",", 
   "87", ",", "89", ",", "91", ",", "93", ",", "97", ",", "99", ",", "101", 
   ",", "103", ",", "107", ",", "109", ",", "111", ",", "113", ",", "117", 
   ",", "119", ",", "121", ",", "123", ",", "127", ",", "129", ",", "131", 
   ",", "133", ",", "137", ",", "139", ",", "141", ",", "143", ",", "147", 
   ",", "149", ",", "151", ",", "153", ",", "157", ",", "159", ",", "161", 
   ",", "163", ",", "167", ",", "169", ",", "171", ",", "173", ",", "177", 
   ",", "179", ",", "181", ",", "183", ",", "187", ",", "189", ",", "191", 
   ",", "193", ",", "197", ",", "199", ",", "201", ",", "203", ",", "207", 
   ",", "209", ",", "211", ",", "213", ",", "217", ",", "219", ",", "221", 
   ",", "223", ",", "227", ",", "229", ",", "231", ",", "233", ",", "237", 
   ",", "239", ",", "241", ",", "243", ",", "247", ",", "249", ",", "251", 
   ",", "253", ",", "257", ",", "259", ",", "261", ",", "263", ",", "267", 
   ",", "269", ",", "271", ",", "273", ",", "277", ",", "279", ",", "281", 
   ",", "283", ",", "287", ",", "289", ",", "291", ",", "293", ",", "297", 
   ",", "299", ",", "301", ",", "303", ",", "307", ",", "309", ",", "311", 
   ",", "313", ",", "317", ",", "319", ",", "321", ",", "323", ",", "327", 
   ",", "329", ",", "331", ",", "333", ",", "337", ",", "339", ",", "341", 
   ",", "343", ",", "347", ",", "349", ",", "351", ",", "353", ",", "357", 
   ",", "359", ",", "361", ",", "363", ",", "367", ",", "369", ",", "371", 
   ",", "373", ",", "377", ",", "379", ",", "381", ",", "383", ",", "387", 
   ",", "389", ",", "391", ",", "393", ",", "397", ",", "399", ",", "401", 
   ",", "403", ",", "407", ",", "409", ",", "411", ",", "413", ",", "417", 
   ",", "419", ",", "421", ",", "423", ",", "427", ",", "429", ",", "431", 
   ",", "433", ",", "437", ",", "439", ",", "441", ",", "443", ",", "447", 
   ",", "449", ",", "451", ",", "453", ",", "457", ",", "459", ",", "461", 
   ",", "463", ",", "467", ",", "469", ",", "471", ",", "473", ",", "477", 
   ",", "479", ",", "481", ",", "483", ",", "487", ",", "489", ",", "491", 
   ",", "493", ",", "497", ",", "499", ",", "501", ",", "503", ",", "507", 
   ",", "509", ",", "511", ",", "513", ",", "517", ",", "519", ",", "521", 
   ",", "523", ",", "527", ",", "529", ",", "531", ",", "533", ",", "537", 
   ",", "539", ",", "541", ",", "543", ",", "547", ",", "549", ",", "551", 
   ",", "553", ",", "557", ",", "559", ",", "561", ",", "563", ",", "567", 
   ",", "569", ",", "571", ",", "573", ",", "577", ",", "579", ",", "581", 
   ",", "583", ",", "587", ",", "589", ",", "591", ",", "593", ",", "597", 
   ",", "599", ",", "601", ",", "603", ",", "607", ",", "609", ",", "611", 
   ",", "613", ",", "617", ",", "619", ",", "621", ",", "623", ",", "627", 
   ",", "629", ",", "631", ",", "633", ",", "637", ",", "639", ",", "641", 
   ",", "643", ",", "647", ",", "649", ",", "651", ",", "653", ",", "657", 
   ",", "659", ",", "661", ",", "663", ",", "667", ",", "669", ",", "671", 
   ",", "673", ",", "677", ",", "679", ",", "681", ",", "683", ",", "687", 
   ",", "689", ",", "691", ",", "693", ",", "697", ",", "699", ",", "701", 
   ",", "703", ",", "707", ",", "709", ",", "711", ",", "713", ",", "717", 
   ",", "719", ",", "721", ",", "723", ",", "727", ",", "729", ",", "731", 
   ",", "733", ",", "737", ",", "739", ",", "741", ",", "743", ",", "747", 
   ",", "749", ",", "751", ",", "753", ",", "757", ",", "759", ",", "761", 
   ",", "763", ",", "767", ",", "769", ",", "771", ",", "773", ",", "777", 
   ",", "779", ",", "781", ",", "783", ",", "787", ",", "789", ",", "791", 
   ",", "793", ",", "797", ",", "799", ",", "801", ",", "803", ",", "807", 
   ",", "809", ",", "811", ",", "813", ",", "817", ",", "819", ",", "821", 
   ",", "823", ",", "827", ",", "829", ",", "831", ",", "833", ",", "837", 
   ",", "839", ",", "841", ",", "843", ",", "847", ",", "849", ",", "851", 
   ",", "853", ",", "857", ",", "859", ",", "861", ",", "863", ",", "867", 
   ",", "869", ",", "871", ",", "873", ",", "877", ",", "879", ",", "881", 
   ",", "883", ",", "887", ",", "889", ",", "891", ",", "893", ",", "897", 
   ",", "899", ",", "901", ",", "903", ",", "907", ",", "909", ",", "911", 
   ",", "913", ",", "917", ",", "919", ",", "921", ",", "923", ",", "927", 
   ",", "929", ",", "931", ",", "933", ",", "937", ",", "939", ",", "941", 
   ",", "943", ",", "947", ",", "949", ",", "951", ",", "953", ",", "957", 
   ",", "959", ",", "961", ",", "963", ",", "967", ",", "969", ",", "971", 
   ",", "973", ",", "977", ",", "979", ",", "981", ",", "983", ",", "987", 
   ",", "989", ",", "991", ",", "993", ",", "997", ",", "999"}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.583434701389043*^9, 3.583434705904648*^9}, 
   3.583434911080936*^9, 3.583435345411359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"2", ",", "999"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"GCD", "[", 
               RowBox[{"#", ",", "10"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}], ",", 
         RowBox[{"MultiplicativeOrder", "[", 
          RowBox[{"10", ",", "#1"}], "]"}]}], "}"}], "&"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", "999"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"GCD", "[", 
           RowBox[{"#", ",", "10"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
       "]"}]}], "]"}], ",", "Last"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583435318249057*^9, 3.5834353528169518`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"983", ",", "982"}], "}"}]], "Output",
 CellChangeTimes->{{3.583435325844123*^9, 3.5834353599617*^9}, {
  3.583435423069628*^9, 3.583435428572356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "i_", "]"}], ":=", 
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{
       RowBox[{"RealDigits", "[", 
        RowBox[{"1", "/", "i"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "i"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Last", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"f", ",", "999"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.583435411388761*^9, 3.5834354174998217`*^9}}],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{{3.58343541857351*^9, 3.583435426544677*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.583435447635024*^9, 3.583435448807013*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.5834354490814466`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.583435451820571*^9, 3.583435453192012*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.583435453479916*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"1", "/", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.583435455131646*^9, 3.583435496947163*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", "6", "}"}]}], "}"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.583435491967134*^9, 3.583435497390485*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"19", "/", "7"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "1", ",", "4", ",", "2", ",", "8", ",", "5"}], 
      "}"}]}], "}"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.583435532485025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"19", "/", "7"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.583435534220892*^9, 3.583435538238962*^9}}],

Cell[BoxData["2.714285714285714285714285714285714285714285714285714285714`20.\
"], "Output",
 CellChangeTimes->{3.583435538531577*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"1", "/", "6"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.583435546718196*^9, 3.583435558543806*^9}}],

Cell[BoxData["0.166666666666666666666666666666666666666666666666666666667`20.\
"], "Output",
 CellChangeTimes->{{3.583435554614476*^9, 3.583435558886539*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"13", "/", "6"}], "]"}]], "Input",
 CellChangeTimes->{
  3.5834355756344767`*^9, {3.58343561476423*^9, 3.583435615049487*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"{", "6", "}"}]}], "}"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.583435576377644*^9, 3.583435615604472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", 
      RowBox[{"{", "6", "}"}]}], "}"}], ",", "1"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox["13", "6"]], "Output",
 CellChangeTimes->{3.583435619388987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"First", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", "1"}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", "6", "}"}]], "Output",
 CellChangeTimes->{3.5834355820468397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"10", "^", "n"}], "\[LessEqual]", 
    RowBox[{"n", "*", 
     SuperscriptBox["9", "5"]}]}], ",", "n", ",", "Integers"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583438703505273*^9, 3.5834387327101793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "\[Equal]", "1"}], "||", 
  RowBox[{"n", "\[Equal]", "2"}], "||", 
  RowBox[{"n", "\[Equal]", "3"}], "||", 
  RowBox[{"n", "\[Equal]", "4"}], "||", 
  RowBox[{"n", "\[Equal]", "5"}]}]], "Output",
 CellChangeTimes->{3.583438733314106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "999999"}], "]"}]], "Input",
 CellChangeTimes->{{3.583438875772983*^9, 3.583438881824689*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{404., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
           "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
           "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
           "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", 
           "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", 
           "40", ",", "41", ",", "42", ",", "43", ",", 
           RowBox[{"\[LeftSkeleton]", "999922", "\[RightSkeleton]"}], ",", 
           "999966", ",", "999967", ",", "999968", ",", "999969", ",", 
           "999970", ",", "999971", ",", "999972", ",", "999973", ",", 
           "999974", ",", "999975", ",", "999976", ",", "999977", ",", 
           "999978", ",", "999979", ",", "999980", ",", "999981", ",", 
           "999982", ",", "999983", ",", "999984", ",", "999985", ",", 
           "999986", ",", "999987", ",", "999988", ",", "999989", ",", 
           "999990", ",", "999991", ",", "999992", ",", "999993", ",", 
           "999994", ",", "999995", ",", "999996", ",", "999997", ",", 
           "999998", ",", "999999"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{68., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 182, 24984121467248874504, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{71., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 182, 24984121467248874504, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{111., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 182, 24984121467248874504, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{107., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[182]]], "Output",
 CellChangeTimes->{3.583438884821217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "999999"}], "]"}]], "Input",
 CellChangeTimes->{{3.583438875772983*^9, 3.58343888674089*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{404., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", 
           "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
           "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
           "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", 
           "34", ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", 
           "40", ",", "41", ",", "42", ",", "43", ",", 
           RowBox[{"\[LeftSkeleton]", "999922", "\[RightSkeleton]"}], ",", 
           "999966", ",", "999967", ",", "999968", ",", "999969", ",", 
           "999970", ",", "999971", ",", "999972", ",", "999973", ",", 
           "999974", ",", "999975", ",", "999976", ",", "999977", ",", 
           "999978", ",", "999979", ",", "999980", ",", "999981", ",", 
           "999982", ",", "999983", ",", "999984", ",", "999985", ",", 
           "999986", ",", "999987", ",", "999988", ",", "999989", ",", 
           "999990", ",", "999991", ",", "999992", ",", "999993", ",", 
           "999994", ",", "999995", ",", "999996", ",", "999997", ",", 
           "999998", ",", "999999"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{68., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 183, 24984121467248874504, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{71., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 183, 24984121467248874504, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{111., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 183, 24984121467248874504, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{107., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[183]]], "Output",
 CellChangeTimes->{3.583438890178665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "*", 
  SuperscriptBox["9", "5"]}]], "Input",
 CellChangeTimes->{{3.583438965824895*^9, 3.583438967824016*^9}}],

Cell[BoxData["295245"], "Output",
 CellChangeTimes->{3.5834389680897303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"10", "^", "n"}], "\[LessEqual]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "*", 
     SuperscriptBox["9", "5"]}]}], ",", "n", ",", "Integers"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5834391617231503`*^9, 3.583439163545144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "\[Equal]", "0"}], "||", 
  RowBox[{"n", "\[Equal]", "1"}], "||", 
  RowBox[{"n", "\[Equal]", "2"}], "||", 
  RowBox[{"n", "\[Equal]", "3"}], "||", 
  RowBox[{"n", "\[Equal]", "4"}], "||", 
  RowBox[{"n", "\[Equal]", "5"}]}]], "Output",
 CellChangeTimes->{3.5834391642765617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["9", "5"], "*", "6"}]], "Input",
 CellChangeTimes->{{3.583439219148036*^9, 3.583439222167162*^9}}],

Cell[BoxData["354294"], "Output",
 CellChangeTimes->{3.58343922249753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", "*", 
   SuperscriptBox["9", "5"]}], "+", 
  SuperscriptBox["2", "5"]}]], "Input",
 CellChangeTimes->{{3.583439433838081*^9, 3.583439460464735*^9}}],

Cell[BoxData["295277"], "Output",
 CellChangeTimes->{{3.583439442355002*^9, 3.58343946161861*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", 
   RowBox[{"2", ",", "295277"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583439478429885*^9, 3.583439488764344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", 
   RowBox[{"2", ",", "295277"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583439478429885*^9, 3.583439490919067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"IntegerDigits", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583439497792604*^9, 3.583439530345399*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.583439526134613*^9, 3.583439530607627*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{"{", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "9"}], "]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.583439685867573*^9, 3.583439693746142*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "9", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583439693959989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "9"}], "]"}], ",", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "9"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.583439685867573*^9, 3.583439702154063*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583439703187114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Apply", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#1", "^", "2"}], "+", 
            RowBox[{"#2", "^", "2"}]}], ")"}], "&"}], ",", "#"}], "]"}], 
       "&"}], ",", 
      RowBox[{"Tuples", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "9"}], "]"}], ",", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "9"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
    "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834399277801733`*^9, 3.583439980332656*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "6", ",", "5", ",", "2", ",", "0", ",", "7", 
   ",", "8", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.5834399408594*^9, 3.583439980559012*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "4", ",", "9", ",", "6", ",", "5", ",", "2", ",", "0", ",", "7", 
    ",", "8", ",", "3"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.583439984522386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834399529646807`*^9, 3.583439961315116*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.583439956805235*^9, 3.583439961663233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "^", "5"}]], "Input",
 CellChangeTimes->{{3.58344007011863*^9, 3.583440071803954*^9}}],

Cell[BoxData["243"], "Output",
 CellChangeTimes->{3.583440072098235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440074209771*^9, 3.583440074762104*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.5834400750139017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"x", "\[LessEqual]", "5"}], ",", "x", ",", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583440162686545*^9, 3.583440177896195*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "bdomv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: \[NoBreak]\\!\\(x \[Element] \\(\\({1, 2, \
3}\\)\\)\\)\[NoBreak] is not a valid domain specification. Mathematica is \
assuming it is a variable to eliminate. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Reduce/bdomv\\\", ButtonNote -> \
\\\"Reduce::bdomv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5834401781995*^9}],

Cell[BoxData[
 RowBox[{"x", "\[LessEqual]", "5"}]], "Output",
 CellChangeTimes->{3.5834401782014837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440320614903*^9, 3.583440321157378*^9}}],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.583440321490803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440379109439*^9, 3.583440379801049*^9}}],

Cell[BoxData["3125"], "Output",
 CellChangeTimes->{3.5834403807453127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", "^", "5"}], "+", 
  RowBox[{"4", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440405452168*^9, 3.583440407387006*^9}}],

Cell[BoxData["2048"], "Output",
 CellChangeTimes->{3.583440407691353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "^", "5"}], "+", 
  RowBox[{"3", "^", "5"}], "+", 
  RowBox[{"3", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.5834404096574087`*^9, 3.583440461166407*^9}}],

Cell[BoxData["729"], "Output",
 CellChangeTimes->{{3.583440413593815*^9, 3.583440461476301*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", "^", "5"}]], "Input",
 CellChangeTimes->{{3.5834405105594473`*^9, 3.5834405112586203`*^9}}],

Cell[BoxData["59049"], "Output",
 CellChangeTimes->{3.5834405115813723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"7", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440513675788*^9, 3.58344051411154*^9}}],

Cell[BoxData["16807"], "Output",
 CellChangeTimes->{3.5834405143005657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440516406303*^9, 3.5834405170138693`*^9}}],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.583440517242251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440518479986*^9, 3.5834405189597282`*^9}}],

Cell[BoxData["7776"], "Output",
 CellChangeTimes->{3.583440519238606*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"7", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440521084803*^9, 3.583440521533393*^9}}],

Cell[BoxData["16807"], "Output",
 CellChangeTimes->{3.583440522256639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "5"}]], "Input",
 CellChangeTimes->{{3.583440966288733*^9, 3.583440968291027*^9}}],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.583440968583495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9999", "-", 
  RowBox[{"6", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440565138445*^9, 3.5834405741249657`*^9}}],

Cell[BoxData["2223"], "Output",
 CellChangeTimes->{3.583440574423953*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"6", "^", "5"}], "+", 
  RowBox[{"5", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440578393621*^9, 3.58344061993834*^9}}],

Cell[BoxData["10901"], "Output",
 CellChangeTimes->{{3.583440581068681*^9, 3.583440589360527*^9}, 
   3.583440620312779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"6", "^", "5"}], "+", 
  RowBox[{"4", "^", "5"}], "+", 
  RowBox[{"4", "^", "5"}], "+", 
  RowBox[{"2", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440593184435*^9, 3.5834406626057158`*^9}}],

Cell[BoxData["9888"], "Output",
 CellChangeTimes->{{3.583440598718048*^9, 3.583440653031859*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"9", "^", "5"}], "+", 
  RowBox[{"8", "^", "5"}], "+", 
  RowBox[{"6", "^", "5"}], "+", 
  RowBox[{"3", "^", "5"}], "+", 
  RowBox[{"2", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440730316421*^9, 3.583440797570259*^9}, {
  3.583440853095551*^9, 3.583440854069315*^9}}],

Cell[BoxData["99868"], "Output",
 CellChangeTimes->{{3.583440731105399*^9, 3.583440798183963*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6", "*", 
  RowBox[{"9", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.583440850431511*^9, 3.5834408573801537`*^9}}],

Cell[BoxData["354294"], "Output",
 CellChangeTimes->{3.583440857804582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583440896298325*^9, 3.583440903021743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.5834409032601023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "22"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t\t", 
       RowBox[{"Range", "[", 
        RowBox[{"100", ",", "333"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t\t", 
       RowBox[{"Range", "[", 
        RowBox[{"1000", ",", "6442"}], "]"}], ",", " ", "\[IndentingNewLine]",
        "\t\t\t", 
       RowBox[{"Range", "[", 
        RowBox[{"10000", ",", "98632"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t\t", 
       RowBox[{"Range", "[", 
        RowBox[{"100000", ",", "295277"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"SumFive", "@@", 
        RowBox[{"IntegerDigits", "[", "#", "]"}]}], "\[Equal]", "#"}], 
      "&"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834409046359777`*^9, 3.583441057813169*^9}, {
  3.583441311919736*^9, 3.583441317981647*^9}, {3.583441954227543*^9, 
  3.5834419756682377`*^9}, {3.583442020069253*^9, 3.583442026161627*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.37467299999999958970420266268774867058`6.661545509014385", ",", 
   "443839"}], "}"}]], "Output",
 CellChangeTimes->{3.583441325420846*^9, 3.583441961810548*^9, 
  3.58344203108537*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
   "4150", ",", "4151", ",", "54748", ",", "92727", ",", "93084", ",", 
    "194979"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["443839"], "Output",
 CellChangeTimes->{3.5834413427682953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{
   "4150", ",", "4151", ",", "54748", ",", "92727", ",", "93084", ",", 
    "194979"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["194979"], "Output",
 CellChangeTimes->{3.5834413407202272`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", "^", "5"}], "+", 
  RowBox[{"1", "^", "5"}], "+", 
  RowBox[{"5", "^", "5"}]}]], "Input",
 CellChangeTimes->{{3.5834413311405783`*^9, 3.583441337656123*^9}}],

Cell[BoxData["4150"], "Output",
 CellChangeTimes->{3.5834413380784893`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583440942535184*^9, 3.5834409458371773`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5834409290691423`*^9, 3.5834409368841553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumFive", "@@", 
  RowBox[{"IntegerDigits", "[", "123", "]"}]}]], "Input",
 CellChangeTimes->{{3.583441061734724*^9, 3.583441065380702*^9}, {
  3.583441303534313*^9, 3.583441306496593*^9}}],

Cell[BoxData["276"], "Output",
 CellChangeTimes->{3.5834410657754183`*^9, 3.583441306745363*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumFive", "=", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "^", "5"}], "&"}], ",", 
      RowBox[{"List", "[", "##", "]"}]}], "]"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.58344107672963*^9, 3.5834411500682497`*^9}, {
  3.583441265522286*^9, 3.583441267649892*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["#1", "5"], "&"}], ")"}], "/@", 
    RowBox[{"{", "##1", "}"}]}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.583441150726481*^9, 3.583441268217166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumFive", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.583441151329866*^9, 3.583441155171433*^9}}],

Cell[BoxData["276"], "Output",
 CellChangeTimes->{3.583441155481863*^9, 3.5834412717739487`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "5"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583441168938944*^9, 3.583441186268261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "32", ",", "243"}], "}"}]], "Output",
 CellChangeTimes->{{3.5834411828234177`*^9, 3.583441186635478*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "32", ",", "243"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["276"], "Output",
 CellChangeTimes->{3.583441276246724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "[", 
  RowBox[{"Sequence", "[", 
   RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583441249709124*^9, 3.583441254719268*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.5834412549627457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.583441256386237*^9, 3.583441258002798*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{3.583441258242703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"isSum", "[", 
     RowBox[{"n_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"n", "\[Equal]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", "n", "]"}], "^", "k"}], "]"}]}]}], ";", 
   "\n", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"10", "^", "6"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"isSum", "[", 
         RowBox[{"#", ",", "5"}], "]"}], "&"}]}], "]"}], "]"}], "-", "1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583442094259643*^9, 3.583442115935046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.5536099999999999354827195929829031229`6.76517529161159", ",", "443839"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.583442106202591*^9, 3.583442121934297*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583442265411525*^9, 3.5834422767117767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"200", "\[Equal]", 
      RowBox[{
       RowBox[{"200", "a"}], "+", 
       RowBox[{"100", "b"}], "+", 
       RowBox[{"50", "c"}], "+", 
       RowBox[{"20", "d"}], "+", 
       RowBox[{"10", "e"}], "+", 
       RowBox[{"5", "f"}], "+", 
       RowBox[{"2", "g"}], "+", 
       RowBox[{"1", "h"}]}]}], "&&", 
     RowBox[{"a", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"b", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"c", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"d", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"e", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"f", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"g", "\[GreaterEqual]", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], "}"}],
     ",", "Integers"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.583442243483939*^9, 3.583442331586372*^9}, {
  3.5834424516178102`*^9, 3.583442452205084*^9}, {3.5834438809007196`*^9, 
  3.583443881615856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "|", 
     RowBox[{"C", "[", "2", "]"}], "|", 
     RowBox[{"C", "[", "3", "]"}], "|", 
     RowBox[{"C", "[", "4", "]"}], "|", 
     RowBox[{"C", "[", "5", "]"}], "|", 
     RowBox[{"C", "[", "6", "]"}], "|", 
     RowBox[{"C", "[", "7", "]"}]}], ")"}], "\[Element]", "Integers"}], "&&", 
  
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "2", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "3", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "4", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "5", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "6", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"C", "[", "7", "]"}], "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"h", "\[Equal]", 
   RowBox[{"200", "-", 
    RowBox[{"200", " ", 
     RowBox[{"C", "[", "1", "]"}]}], "-", 
    RowBox[{"100", " ", 
     RowBox[{"C", "[", "2", "]"}]}], "-", 
    RowBox[{"50", " ", 
     RowBox[{"C", "[", "3", "]"}]}], "-", 
    RowBox[{"20", " ", 
     RowBox[{"C", "[", "4", "]"}]}], "-", 
    RowBox[{"10", " ", 
     RowBox[{"C", "[", "5", "]"}]}], "-", 
    RowBox[{"5", " ", 
     RowBox[{"C", "[", "6", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"C", "[", "7", "]"}]}]}]}], "&&", 
  RowBox[{"a", "\[Equal]", 
   RowBox[{"C", "[", "1", "]"}]}], "&&", 
  RowBox[{"b", "\[Equal]", 
   RowBox[{"C", "[", "2", "]"}]}], "&&", 
  RowBox[{"c", "\[Equal]", 
   RowBox[{"C", "[", "3", "]"}]}], "&&", 
  RowBox[{"d", "\[Equal]", 
   RowBox[{"C", "[", "4", "]"}]}], "&&", 
  RowBox[{"e", "\[Equal]", 
   RowBox[{"C", "[", "5", "]"}]}], "&&", 
  RowBox[{"f", "\[Equal]", 
   RowBox[{"C", "[", "6", "]"}]}], "&&", 
  RowBox[{"g", "\[Equal]", 
   RowBox[{"C", "[", "7", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5834423319937487`*^9, 3.5834424527996473`*^9, 
  3.583443882002339*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], "}"}],
     "/.", 
    RowBox[{"First", "[", "sol", "]"}]}], "/.", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], "//", "Simplify"}]], "Input",\

 CellChangeTimes->{{3.583442436429063*^9, 3.5834425001493797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", "i", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583442520282984*^9, 3.583442528166465*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", "10", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583442528845488*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Tuples", "[", "{"}]], "Input",
 CellChangeTimes->{{3.5834425304560423`*^9, 3.583442532516356*^9}, {
  3.583442633314472*^9, 3.583442638191937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"200", "^", "8"}]], "Input",
 CellChangeTimes->{{3.583442655069717*^9, 3.5834426559332943`*^9}}],

Cell[BoxData["2560000000000000000"], "Output",
 CellChangeTimes->{3.583442656288021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       RowBox[{"200", "/", "#"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "200", ",", "100", ",", "50", ",", "20", ",", "10", ",", "5", ",", "2", 
      ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583442717844021*^9, 3.583442779994376*^9}, {
  3.5834428699293127`*^9, 3.583442912830412*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "nomem"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The current computation was aborted because there was \
insufficient memory available to complete the computation.\"\>"}]], "Message",\
 "MSG",
 CellChangeTimes->{{3.583442903229165*^9, 3.583442913659959*^9}}],

Cell[BoxData[
 RowBox[{"SystemException", "[", 
  RowBox[{"\<\"MemoryAllocationFailure\"\>", ",", 
   RowBox[{"{", 
    TagBox[
     RowBox[{"Tuples", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", 
          "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", 
          "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", 
          "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", 
          "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
          "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", ",", 
          "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", 
          "38", ",", "39", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", 
          "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", 
          "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
          "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", ",", 
          "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", 
          "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", ",", 
          "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", ",", 
          "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", ",", 
          "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", ",", 
          "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", ",", 
          "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
          "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", 
          "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", 
          "86", ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", 
          "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", ",", 
          "98", ",", "99", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", 
          "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", 
          "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
          "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", ",", 
          "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", 
          "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", ",", 
          "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", ",", 
          "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", ",", 
          "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", ",", 
          "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", ",", 
          "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
          "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", 
          "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", 
          "86", ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", 
          "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", ",", 
          "98", ",", "99", ",", "100", ",", "101", ",", "102", ",", "103", 
          ",", "104", ",", "105", ",", "106", ",", "107", ",", "108", ",", 
          "109", ",", "110", ",", "111", ",", "112", ",", "113", ",", "114", 
          ",", "115", ",", "116", ",", "117", ",", "118", ",", "119", ",", 
          "120", ",", "121", ",", "122", ",", "123", ",", "124", ",", "125", 
          ",", "126", ",", "127", ",", "128", ",", "129", ",", "130", ",", 
          "131", ",", "132", ",", "133", ",", "134", ",", "135", ",", "136", 
          ",", "137", ",", "138", ",", "139", ",", "140", ",", "141", ",", 
          "142", ",", "143", ",", "144", ",", "145", ",", "146", ",", "147", 
          ",", "148", ",", "149", ",", "150", ",", "151", ",", "152", ",", 
          "153", ",", "154", ",", "155", ",", "156", ",", "157", ",", "158", 
          ",", "159", ",", "160", ",", "161", ",", "162", ",", "163", ",", 
          "164", ",", "165", ",", "166", ",", "167", ",", "168", ",", "169", 
          ",", "170", ",", "171", ",", "172", ",", "173", ",", "174", ",", 
          "175", ",", "176", ",", "177", ",", "178", ",", "179", ",", "180", 
          ",", "181", ",", "182", ",", "183", ",", "184", ",", "185", ",", 
          "186", ",", "187", ",", "188", ",", "189", ",", "190", ",", "191", 
          ",", "192", ",", "193", ",", "194", ",", "195", ",", "196", ",", 
          "197", ",", "198", ",", "199", ",", "200"}], "}"}]}], "}"}], "]"}],
     HoldForm], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.5834428912875957`*^9, 3.583442913665778*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.583442756958116*^9, 3.583442764235894*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.583442764930526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"200", "/", "#"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "200", ",", "100", ",", "50", ",", "20", ",", "10", ",", "5", ",", "2", 
     ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583442944406692*^9, 3.583442958248349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
     "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", 
     "54", ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", 
     ",", "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", 
     "67", ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", 
     ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", 
     "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", 
     ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", 
     "93", ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", 
     ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
     "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", 
     "54", ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", 
     ",", "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", 
     "67", ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", 
     ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", 
     "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", 
     ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", 
     "93", ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", 
     ",", "100", ",", "101", ",", "102", ",", "103", ",", "104", ",", "105", 
     ",", "106", ",", "107", ",", "108", ",", "109", ",", "110", ",", "111", 
     ",", "112", ",", "113", ",", "114", ",", "115", ",", "116", ",", "117", 
     ",", "118", ",", "119", ",", "120", ",", "121", ",", "122", ",", "123", 
     ",", "124", ",", "125", ",", "126", ",", "127", ",", "128", ",", "129", 
     ",", "130", ",", "131", ",", "132", ",", "133", ",", "134", ",", "135", 
     ",", "136", ",", "137", ",", "138", ",", "139", ",", "140", ",", "141", 
     ",", "142", ",", "143", ",", "144", ",", "145", ",", "146", ",", "147", 
     ",", "148", ",", "149", ",", "150", ",", "151", ",", "152", ",", "153", 
     ",", "154", ",", "155", ",", "156", ",", "157", ",", "158", ",", "159", 
     ",", "160", ",", "161", ",", "162", ",", "163", ",", "164", ",", "165", 
     ",", "166", ",", "167", ",", "168", ",", "169", ",", "170", ",", "171", 
     ",", "172", ",", "173", ",", "174", ",", "175", ",", "176", ",", "177", 
     ",", "178", ",", "179", ",", "180", ",", "181", ",", "182", ",", "183", 
     ",", "184", ",", "185", ",", "186", ",", "187", ",", "188", ",", "189", 
     ",", "190", ",", "191", ",", "192", ",", "193", ",", "194", ",", "195", 
     ",", "196", ",", "197", ",", "198", ",", "199", ",", "200"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.583442958604124*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.58344296337002*^9, 3.583442969200542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "10", ",", "20", ",", "40", ",", "100", ",", 
   "200"}], "}"}]], "Output",
 CellChangeTimes->{3.583442969594301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "4", ",", "10", ",", "20", ",", "40", ",", "100", ",", 
    "200"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["377"], "Output",
 CellChangeTimes->{3.583443064194213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.583442972193513*^9, 3.583442981091996*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Product", "::", "argmu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Product\\)\[NoBreak] called with 1 \
argument; \[NoBreak]\\!\\(2\\)\[NoBreak] or more arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argmu\\\", \
ButtonNote -> \\\"Product::argmu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5834429813435993`*^9}],

Cell[BoxData[
 RowBox[{"Product", "[", "%", "]"}]], "Output",
 CellChangeTimes->{3.5834429813722057`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583442982265733*^9, 3.583442984345462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"Times", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "4", ",", "10", ",", "20", ",", "40", ",", "100", ",",
      "200"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583443027443297*^9, 3.5834430686014442`*^9}}],

Cell[BoxData["1280000000"], "Output",
 CellChangeTimes->{{3.583443060737224*^9, 3.583443068973055*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"200", "/", "#"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "200", ",", "100", ",", "50", ",", "20", ",", "10", ",", "5", ",", 
         "2", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#1", "*", "200"}], "+", 
       RowBox[{"#2", "*", "100"}], "+", 
       RowBox[{"#3", "*", "50"}], "+", 
       RowBox[{"#4", "*", "20"}], "+", 
       RowBox[{"#5", "*", "10"}], "+", 
       RowBox[{"#6", "*", "5"}], "+", 
       RowBox[{"#7", "*", "2"}], "+", 
       RowBox[{"#8", "*", "1"}]}], "\[Equal]", "200"}], "&"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.583443608222711*^9, 3.583443692614625*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "nomem"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The current computation was aborted because there was \
insufficient memory available to complete the computation.\"\>"}]], "Message",\
 "MSG",
 CellChangeTimes->{3.58344361615128*^9, 3.583443693623076*^9}],

Cell[BoxData[
 RowBox[{"SystemException", "[", 
  RowBox[{"\<\"MemoryAllocationFailure\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               FractionBox["200", "#1"]}], "]"}], "&"}], ")"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "200", ",", "100", ",", "50", ",", "20", ",", "10", ",", "5", ",",
              "2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", " ", "200"}], "+", 
            RowBox[{"#2", " ", "100"}], "+", 
            RowBox[{"#3", " ", "50"}], "+", 
            RowBox[{"#4", " ", "20"}], "+", 
            RowBox[{"#5", " ", "10"}], "+", 
            RowBox[{"#6", " ", "5"}], "+", 
            RowBox[{"#7", " ", "2"}], "+", 
            RowBox[{"#8", " ", "1"}]}], "\[Equal]", "200"}], "&"}]}], "]"}], 
       ";"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              FractionBox["200", "#1"]}], "]"}], "&"}], ")"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "200", ",", "100", ",", "50", ",", "20", ",", "10", ",", "5", ",", 
            "2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#1", " ", "200"}], "+", 
           RowBox[{"#2", " ", "100"}], "+", 
           RowBox[{"#3", " ", "50"}], "+", 
           RowBox[{"#4", " ", "20"}], "+", 
           RowBox[{"#5", " ", "10"}], "+", 
           RowBox[{"#6", " ", "5"}], "+", 
           RowBox[{"#7", " ", "2"}], "+", 
           RowBox[{"#8", " ", "1"}]}], "\[Equal]", "200"}], "&"}]}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"Tuples", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", 
           ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", 
           ",", "38", ",", "39", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", 
           ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", 
           ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", 
           ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", 
           ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", 
           ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", 
           ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
           ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", 
           ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", 
           ",", "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", 
           ",", "86", ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", 
           ",", "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", 
           ",", "98", ",", "99", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", 
           ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", 
           ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", 
           ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", 
           ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", 
           ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", 
           ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
           ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", 
           ",", "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", 
           ",", "80", ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", 
           ",", "86", ",", "87", ",", "88", ",", "89", ",", "90", ",", "91", 
           ",", "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", 
           ",", "98", ",", "99", ",", "100", ",", "101", ",", "102", ",", 
           "103", ",", "104", ",", "105", ",", "106", ",", "107", ",", "108", 
           ",", "109", ",", "110", ",", "111", ",", "112", ",", "113", ",", 
           "114", ",", "115", ",", "116", ",", "117", ",", "118", ",", "119", 
           ",", "120", ",", "121", ",", "122", ",", "123", ",", "124", ",", 
           "125", ",", "126", ",", "127", ",", "128", ",", "129", ",", "130", 
           ",", "131", ",", "132", ",", "133", ",", "134", ",", "135", ",", 
           "136", ",", "137", ",", "138", ",", "139", ",", "140", ",", "141", 
           ",", "142", ",", "143", ",", "144", ",", "145", ",", "146", ",", 
           "147", ",", "148", ",", "149", ",", "150", ",", "151", ",", "152", 
           ",", "153", ",", "154", ",", "155", ",", "156", ",", "157", ",", 
           "158", ",", "159", ",", "160", ",", "161", ",", "162", ",", "163", 
           ",", "164", ",", "165", ",", "166", ",", "167", ",", "168", ",", 
           "169", ",", "170", ",", "171", ",", "172", ",", "173", ",", "174", 
           ",", "175", ",", "176", ",", "177", ",", "178", ",", "179", ",", 
           "180", ",", "181", ",", "182", ",", "183", ",", "184", ",", "185", 
           ",", "186", ",", "187", ",", "188", ",", "189", ",", "190", ",", 
           "191", ",", "192", ",", "193", ",", "194", ",", "195", ",", "196", 
           ",", "197", ",", "198", ",", "199", ",", "200"}], "}"}]}], "}"}], 
       "]"}],
      HoldForm]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.583443616155958*^9, 3.5834436936293287`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583444633568458*^9, 3.5834446540513783`*^9}, 
   3.583444691428138*^9, {3.583445057566289*^9, 3.583445060328644*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"S_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Divisible", "[", 
         RowBox[{"S", ",", "x"}], "]"}]}], "}"}], "}"}], ",", "0"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.583445070105558*^9, 3.583445126600209*^9}, {
   3.5834452857349358`*^9, 3.583445351835824*^9}, 3.583445985874732*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"S_", ",", "h__", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Total", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#", ",", "h"}], "]"}], "&"}], ",", 
      RowBox[{"S", "-", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"S", ",", "x"}], "]"}], ",", "x"}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5834453711264477`*^9, 3.583445392660186*^9}, {
  3.583445445097136*^9, 3.583445462578979*^9}, {3.583445498009412*^9, 
  3.583445520496777*^9}, {3.583445768987015*^9, 3.583445821932293*^9}, {
  3.583445989144128*^9, 3.5834460123962812`*^9}, {3.583446127444777*^9, 
  3.583446128754704*^9}, {3.583446343641268*^9, 3.5834463527343407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"10", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.583445899910397*^9, 3.5834459230895157`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.5834459233744183`*^9, {3.5834459934109097`*^9, 3.583446016281743*^9}, 
   3.5834460694584513`*^9, {3.583446125142242*^9, 3.583446131937295*^9}, 
   3.583446358128716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"200", ",", "1", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.583446132977189*^9, 3.583446140316687*^9}}],

Cell[BoxData["2550"], "Output",
 CellChangeTimes->{3.58344614059807*^9, 3.583446356957796*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
  "200", ",", "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", 
   "100", ",", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.583446141830298*^9, 3.583446149151635*^9}}],

Cell[BoxData["71898"], "Output",
 CellChangeTimes->{3.583446149784779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
  "100", ",", "1", ",", "5", ",", "10", ",", "25", ",", "50", ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583446245241836*^9, 3.5834462807886143`*^9}}],

Cell[BoxData["252"], "Output",
 CellChangeTimes->{{3.5834462580350933`*^9, 3.583446281236644*^9}, 
   3.583446360778751*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583446405600678*^9, 3.583446408047927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"S_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"S", ",", "x"}], "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Divisible", "[", 
         RowBox[{"S", ",", "x"}], "]"}]}], "}"}], "}"}], ",", "0"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.583451287405024*^9, 3.583451299276383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"S_", ",", "h__", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"S", ",", "h", ",", "x"}], "]"}], "=", 
   RowBox[{"Total", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"#", ",", "h"}], "]"}], "&"}], ",", 
      RowBox[{"S", "-", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"S", ",", "x"}], "]"}], ",", "x"}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5834513058452873`*^9, 3.583451311450272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"200", ",", "1", ",", "2", ",", "4"}], "]"}]], "Input"],

Cell[BoxData["2601"], "Output",
 CellChangeTimes->{3.583446430327262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
  "100", ",", "1", ",", "5", ",", "10", ",", "25", ",", "50", ",", "100"}], 
  "]"}]], "Input"],

Cell[BoxData["293"], "Output",
 CellChangeTimes->{3.583446435673131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
  "200", ",", "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", 
   "100", ",", "200"}], "]"}]], "Input"],

Cell[BoxData["73682"], "Output",
 CellChangeTimes->{3.583446442870163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"f", "[", 
   RowBox[{
   "200", ",", "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", 
    "100", ",", "200"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834467159797497`*^9, 3.5834467260838203`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.23409900000000000153121959556301590055`5.389999471805767", ",", 
   "73682"}], "}"}]], "Output",
 CellChangeTimes->{3.5834467265962954`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"f", "[", 
   RowBox[{
   "200", ",", "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", 
    "100", ",", "200"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01041500000000000064614980033184110653`4.038259187563389", ",", 
   "73682"}], "}"}]], "Output",
 CellChangeTimes->{3.583451320511572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerPartitions", "[", 
   RowBox[{"200", ",", "All", ",", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", 
      ",", "200"}], "}"}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.583446743755046*^9, 3.583446766522897*^9}}],

Cell[BoxData["73682"], "Output",
 CellChangeTimes->{{3.583446755947616*^9, 3.5834467709233837`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"IntegerPartitions", "[", 
    RowBox[{"200", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", 
       ",", "200"}], "}"}]}], "]"}], "//", "Length"}], "]"}]], "Input",
 CellChangeTimes->{{3.583446772319385*^9, 3.583446781224725*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15005299999999999194244537648046389222`5.196844595949003", ",", 
   "73682"}], "}"}]], "Output",
 CellChangeTimes->{3.5834467817262383`*^9, 3.583451577541801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"Times", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"49", "/", "98"}], ",", 
     RowBox[{"64", "/", "16"}], ",", 
     RowBox[{"98", "/", "49"}], ",", 
     RowBox[{"16", "/", "64"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.58344741857767*^9, 3.583447452911745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["1", "2"], ",", "2", ",", "4", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.583447453948422*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Share", "[", "]"}]], "Input",
 CellChangeTimes->{{3.583454294144271*^9, 3.58345429473083*^9}}],

Cell[BoxData["71621056"], "Output",
 CellChangeTimes->{3.5834542969733753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["71621056", 
   SuperscriptBox["2", "20"]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["68.30316162109375`"], "Output",
 CellChangeTimes->{3.583454303852132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Share", "[", "]"}]], "Input",
 CellChangeTimes->{{3.583454324157311*^9, 3.5834543258306103`*^9}}],

Cell[BoxData["150600"], "Output",
 CellChangeTimes->{3.583454327258382*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Share", "[", "]"}]], "Input",
 CellChangeTimes->{{3.583454328737255*^9, 3.583454329304007*^9}}],

Cell[BoxData["50048"], "Output",
 CellChangeTimes->{3.583454330752832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Map"}]], "Input",
 CellChangeTimes->{{3.583455080510335*^9, 3.583455081470756*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Map\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) or \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"/@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to each element on the first \
level in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\
\\\"Map\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) to parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Map"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.583455082007599*^9},
 CellTags->"Info3583429881-5115956"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sow", "[", 
  RowBox[{"Reap", "[", "a", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583456260618581*^9, 3.58345626256006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583456262801373*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", 
    RowBox[{"{", "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", "a", "}"}]], "Output",
 CellChangeTimes->{3.583456266576417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reap", "[", 
  RowBox[{
   RowBox[{"Sow", "[", "a", "]"}], ";", 
   RowBox[{"Sow", "[", "b", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583456270465231*^9, 3.5834563051658916`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.583456284885282*^9, 3.583456305408993*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"Null", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.583456288463482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"10", "^", "1000"}], ",", 
      RowBox[{
       RowBox[{"10", "^", "1000"}], "+", "5000"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.583456756968726*^9, 3.583456801796996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.49161600000000049703885451890528202057`6.949590259954494", ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.583456789363936*^9, 3.5834568106697407`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PrimeQ"}]], "Input",
 CellChangeTimes->{{3.5834567626905746`*^9, 3.583456767465193*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimeQ\\\", \\\"[\\\", StyleBox[\\\"expr\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"expr\\\
\", \\\"TI\\\"]\\) is a prime number, and yields False otherwise. \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrimeQ"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5834567676893473`*^9},
 CellTags->"Info3583431567-5115956"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ParallelTable", "[", 
  RowBox[{
   RowBox[{"PrimeQ", "[", "x", "]"}], ",", "x"}]}]], "Input",
 CellChangeTimes->{{3.5834567626905746`*^9, 3.583456767465193*^9}, {
  3.583456828594276*^9, 3.5834568381605873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"PrimeQ", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"10", "^", "1000"}], ",", 
      RowBox[{
       RowBox[{"10", "^", "1000"}], "+", "5000"}]}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.583456860140476*^9, 3.583456866633952*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.63074700000000039068481783033348619938`6.686250967323526", ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.583456880591805*^9, 3.583456894393917*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reap", "[", 
  RowBox[{
   RowBox[{"Sow", "[", "a", "]"}], ";", 
   RowBox[{"Sow", "[", "d", "]"}], ";", "e"}], "]"}]], "Input",
 CellChangeTimes->{{3.583457219613551*^9, 3.5834572263289347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"a", ",", "d"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.583457226614299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reap", "[", 
  RowBox[{
   RowBox[{"Sow", "[", "a", "]"}], ";", 
   RowBox[{"Sow", "[", "d", "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.583457219613551*^9, 3.583457231274633*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"a", ",", "d"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.58345723149619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "123", "]"}]], "Input",
 CellChangeTimes->{{3.58345742793477*^9, 3.5834574300661077`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.5834574303062696`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Prime", "?"}]], "Input",
 CellChangeTimes->{{3.583457434732522*^9, 3.58345743685894*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Prime"}]], "Input",
 CellChangeTimes->{{3.5834574380152683`*^9, 3.583457439246007*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Prime\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)\\!\\(\\*RowBox[{SuperscriptBox[\\\
\"\[Null]\\\", \\\"th\\\"], \\\" \\\"}]\\)prime number. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Prime"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5834574395832663`*^9},
 CellTags->"Info3583432239-5115956"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5834574413592453`*^9, 3.583457443360919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "123", "]"}]], "Input",
 CellChangeTimes->{{3.583457667956078*^9, 3.583457686528803*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.583457686920471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{3.583457688724745*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "-", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5834577316399384`*^9, 3.58345773566689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.583457736087454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MapIndexed"}]], "Input",
 CellChangeTimes->{{3.583457923093055*^9, 3.5834579266367683`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MapIndexed\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) to the elements of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\
\\), giving the part specification of each element as a second argument to \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"MapIndexed\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to all \
parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) on levels specified \
by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MapIndexed"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.583457927202631*^9},
 CellTags->"Info3583432726-5115956"]
}, Open  ]],

Cell[BoxData["ParallelMap"], "Input",
 CellChangeTimes->{
  3.5834580478001213`*^9, {3.583458107081411*^9, 3.583458110368232*^9}, {
   3.583458564760556*^9, 3.583458587252214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "123123", "]"}]], "Input",
 CellChangeTimes->{{3.583458592493849*^9, 3.583458596622786*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "1", ",", "2", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.583458596862548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapIndexed", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"#", "//", "IntegerDigits"}], "//", "Reverse"}], ")"}]}]], "Input",\

 CellChangeTimes->{{3.583458680697706*^9, 3.583458725077561*^9}, {
  3.5834587671396503`*^9, 3.583458772822837*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5834587126691628`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.58345869688483*^9, 3.583458705559328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.583458705836804*^9}]
}, Open  ]],

Cell[BoxData["asfdadsf"], "Input",
 CellChangeTimes->{{3.583458795518301*^9, 3.5834587960787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"#", "-", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["10", "#2"], "*", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "#1"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}], ",", 
       RowBox[{
        RowBox[{"#", "//", "IntegerDigits"}], "//", "Reverse"}]}], "]"}]}], 
    "]"}]}], "&"}]], "Input",
 CellChangeTimes->{{3.583458800208455*^9, 3.583458802160928*^9}, {
   3.5834588325458393`*^9, 3.583458891095871*^9}, {3.583458936317338*^9, 
   3.58345897068292*^9}, 3.5834590527067327`*^9, {3.58345941613772*^9, 
   3.583459475184564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "-", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["10", "#2"], " ", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "#1"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"IntegerDigits", "[", "#1", "]"}], "]"}]}], "]"}]}], "]"}]}], 
  "&"}]], "Output",
 CellChangeTimes->{3.583458863165077*^9, 3.5834594761596622`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}], ",", 
     RowBox[{
      RowBox[{"#", "//", "IntegerDigits"}], "//", "Reverse"}]}], "]"}], "&"}],
   "[", "123", "]"}]], "Input",
 CellChangeTimes->{{3.58345949315889*^9, 3.5834594951900043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5834594955927687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"#", "-", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ParallelMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["10", 
               RowBox[{"Last", "[", "#1", "]"}]], "*", "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"First", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}],
             ",", 
            RowBox[{
             RowBox[{"ReplacePart", "[", 
              RowBox[{
               RowBox[{"IntegerDigits", "[", "#", "]"}], ",", 
               RowBox[{"1", "->", 
                RowBox[{
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", "#", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}]}], "]"}], "//",
              "Reverse"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], "]"}], "&"}], 
  "[", "999999", "]"}]], "Input",
 CellChangeTimes->{{3.583459498728981*^9, 3.5834597247597723`*^9}, {
  3.583459759951646*^9, 3.5834597612963333`*^9}, {3.5834598540714827`*^9, 
  3.583459890576339*^9}, {3.58345992344939*^9, 3.583459926225196*^9}, {
  3.5834601355865726`*^9, 3.5834602181611977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "999998", ",", "999997", ",", "999996", ",", "999995", ",", "999994", ",", 
   "999993", ",", "999992", ",", "999991", ",", "999990", ",", "999989", ",", 
   "999979", ",", "999969", ",", "999959", ",", "999949", ",", "999939", ",", 
   "999929", ",", "999919", ",", "999909", ",", "999899", ",", "999799", ",", 
   "999699", ",", "999599", ",", "999499", ",", "999399", ",", "999299", ",", 
   "999199", ",", "999099", ",", "998999", ",", "997999", ",", "996999", ",", 
   "995999", ",", "994999", ",", "993999", ",", "992999", ",", "991999", ",", 
   "990999", ",", "989999", ",", "979999", ",", "969999", ",", "959999", ",", 
   "949999", ",", "939999", ",", "929999", ",", "919999", ",", "909999", ",", 
   "899999", ",", "799999", ",", "699999", ",", "599999", ",", "499999", ",", 
   "399999", ",", "299999", ",", "199999"}], "}"}]], "Output",
 CellChangeTimes->{{3.583459556271373*^9, 3.583459600062955*^9}, {
   3.5834596343470592`*^9, 3.5834597525703707`*^9}, 3.583459857845499*^9, 
   3.583459891540669*^9, {3.583460143507885*^9, 3.583460218560182*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%409", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{3.5834602209089537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "998", ",", "997", ",", "996", ",", "995", ",", "994", ",", "993", ",", 
    "992", ",", "991", ",", "990", ",", "989", ",", "979", ",", "969", ",", 
    "959", ",", "949", ",", "939", ",", "929", ",", "919", ",", "909", ",", 
    "899", ",", "799", ",", "699", ",", "599", ",", "499", ",", "399", ",", 
    "299", ",", "199"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{3.5834602132996817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "88", ",", "87", ",", "86", ",", "85", ",", "84", ",", "83", ",", "82", 
    ",", "81", ",", "80", ",", "79", ",", "69", ",", "59", ",", "49", ",", 
    "39", ",", "29", ",", "19"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.583460149942094*^9, 3.583460157211831*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.5834601576232862`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5834597834273443`*^9, 3.583459790001883*^9}}],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.5834597902113237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "123", "]"}]], "Input",
 CellChangeTimes->{{3.583459954633402*^9, 3.583460002430023*^9}, {
  3.5834600455776453`*^9, 3.5834600463080807`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.583459969006908*^9, 3.5834600026873713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", "123", "]"}], ",", 
   RowBox[{"1", "->", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerDigits", "[", "123", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583460072499775*^9, 3.583460117346562*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.583460086531104*^9, 3.5834601180068693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeOneDigit", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"#", "-", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["10", 
               RowBox[{"Last", "[", "#1", "]"}]], "*", "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"First", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}],
             ",", 
            RowBox[{
             RowBox[{"ReplacePart", "[", 
              RowBox[{
               RowBox[{"IntegerDigits", "[", "#", "]"}], ",", 
               RowBox[{"1", "->", 
                RowBox[{
                 RowBox[{
                  RowBox[{"IntegerDigits", "[", "#", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}]}], "]"}], "//",
              "Reverse"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5834602288374357`*^9, 3.583460235979309*^9}, {
  3.583460268167089*^9, 3.5834602721277847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"#1", "-", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"Last", "[", "#1", "]"}]], " ", "i"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"First", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}], 
         ")"}], "/@", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", 
             RowBox[{
              RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "}"}], "&"}], 
          ",", 
          RowBox[{"Reverse", "[", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", "#1", "]"}], ",", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{
               RowBox[{
                RowBox[{"IntegerDigits", "[", "#1", "]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
               "1"}]}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], "}"}]}], "]"}], 
  "&"}]], "Output",
 CellChangeTimes->{{3.583460232235525*^9, 3.583460236613278*^9}, 
   3.583460273420457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeOneDigit", "[", "999", "]"}]], "Input",
 CellChangeTimes->{{3.583460239292194*^9, 3.583460241607739*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "998", ",", "997", ",", "996", ",", "995", ",", "994", ",", "993", ",", 
   "992", ",", "991", ",", "990", ",", "989", ",", "979", ",", "969", ",", 
   "959", ",", "949", ",", "939", ",", "929", ",", "919", ",", "909", ",", 
   "899", ",", "799", ",", "699", ",", "599", ",", "499", ",", "399", ",", 
   "299", ",", "199"}], "}"}]], "Output",
 CellChangeTimes->{3.5834602420113707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeOneDigit", "[", "123", "]"}]], "Input",
 CellChangeTimes->{{3.583460493668496*^9, 3.5834604970159693`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"122", ",", "121", ",", "120", ",", "113", ",", "103"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.583460497277266*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChopLeft", "[", "n_", "]"}], ":=", 
  RowBox[{"FromDigits", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", "n", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.583460520233377*^9, 3.5834605365413218`*^9}, {
  3.583460603736648*^9, 3.583460614276906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChopLeft", "[", "123123", "]"}]], "Input",
 CellChangeTimes->{{3.583460615716885*^9, 3.583460618615856*^9}}],

Cell[BoxData["23123"], "Output",
 CellChangeTimes->{3.58346061891997*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", "123", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583460582068905*^9, 3.583460597786956*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.58346059836421*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "connected", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "2", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "1", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "3", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "4", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "5", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "6", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "7", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "8", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "9", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connected", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"connected", "[", "n", "]"}], "=", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"PrimeQ", "[", "n", "]"}], ",", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"connected", "[", 
           RowBox[{"ChopLeft", "[", "n", "]"}], "]"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", "n", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}]}], ")"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Or", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"connected", "[", "#", "]"}], "&"}], ",", 
           RowBox[{"ChangeOneDigit", "[", "n", "]"}]}], "]"}]}]}], "]"}]}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.583460626658835*^9, 3.583460639175329*^9}, {
  3.583460910145767*^9, 3.583460953743596*^9}, {3.583461018147434*^9, 
  3.583461060027623*^9}, {3.583501682802126*^9, 3.583501697646833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "connected"}]], "Input",
 CellChangeTimes->{{3.583501483952035*^9, 3.5835014855640182`*^9}}],

Cell[CellGroupData[{

Cell["Global`connected", "Print", "PrintUsage",
 CellChangeTimes->{3.583501486047454*^9},
 CellTags->"Info3583476285-5115956"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"connected", "[", "1", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "2", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "3", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "4", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "5", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "6", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "7", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "8", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "9", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "n_", "]"}], ":=", 
         RowBox[{
          RowBox[{"connected", "[", "n", "]"}], "=", 
          RowBox[{
           RowBox[{"PrimeQ", "[", "n", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"connected", "[", 
              RowBox[{"ChopLeft", "[", "n", "]"}], "]"}], "||", 
             RowBox[{"Or", "@@", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"connected", "[", "#1", "]"}], "&"}], ")"}], "/@", 
               RowBox[{"ChangeOneDigit", "[", "n", "]"}]}]}]}], ")"}]}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`connected],
  Editable->False]], "Print",
 CellChangeTimes->{3.583501486144606*^9},
 CellTags->"Info3583476285-5115956"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"connected", "[", "103", "]"}]], "Input",
 CellChangeTimes->{{3.58350146649477*^9, 3.583501470171091*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.583501470478937*^9, 3.583501494240654*^9}, 
   3.583501703690673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "connected"}]], "Input",
 CellChangeTimes->{{3.583501495794558*^9, 3.58350150192174*^9}}],

Cell[CellGroupData[{

Cell["Global`connected", "Print", "PrintUsage",
 CellChangeTimes->{3.583501502322504*^9},
 CellTags->"Info3583476302-5115956"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"connected", "[", "1", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "2", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "3", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "4", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "5", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "6", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "7", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "8", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "9", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "103", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"connected", "[", "n_", "]"}], ":=", 
         RowBox[{
          RowBox[{"connected", "[", "n", "]"}], "=", 
          RowBox[{
           RowBox[{"PrimeQ", "[", "n", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"connected", "[", 
              RowBox[{"ChopLeft", "[", "n", "]"}], "]"}], "||", 
             RowBox[{"Or", "@@", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"connected", "[", "#1", "]"}], "&"}], ")"}], "/@", 
               RowBox[{"ChangeOneDigit", "[", "n", "]"}]}]}]}], ")"}]}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`connected],
  Editable->False]], "Print",
 CellChangeTimes->{3.583501502390251*^9},
 CellTags->"Info3583476302-5115956"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"connected", "["}]], "Input",
 CellChangeTimes->{{3.5835015242751827`*^9, 3.5835015262403193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"First", ",", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"connected", "[", "#", "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"10", "^", "3"}]}], "]"}], ",", "PrimeQ"}], "]"}]}], 
       "]"}], ",", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583461174053803*^9, 3.58346119292915*^9}, {
  3.583461243809992*^9, 3.583461254341062*^9}, {3.583461397914927*^9, 
  3.5834614220684233`*^9}, {3.583461473835329*^9, 3.583461543491475*^9}, {
  3.583461580121201*^9, 3.583461582633219*^9}}],

Cell[BoxData["23678"], "Output",
 CellChangeTimes->{
  3.583461254775736*^9, {3.58346139880796*^9, 3.5834614224167852`*^9}, 
   3.583461474800127*^9, {3.583461509441104*^9, 3.583461544268354*^9}, {
   3.583461574782093*^9, 3.583461583928082*^9}, {3.583501387752903*^9, 
   3.583501415967227*^9}, 3.583501707603567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
   "2", ",", "11", ",", "31", ",", "41", ",", "61", ",", "71", ",", "101", 
    ",", "131", ",", "151", ",", "181", ",", "191", ",", "211", ",", "241", 
    ",", "251", ",", "271", ",", "281", ",", "311", ",", "331", ",", "401", 
    ",", "421", ",", "431", ",", "461", ",", "491", ",", "521", ",", "541", 
    ",", "571", ",", "601", ",", "631", ",", "641", ",", "661", ",", "691", 
    ",", "701", ",", "751", ",", "761", ",", "811", ",", "821", ",", "881", 
    ",", "911", ",", "941", ",", "971", ",", "991"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["18472"], "Output",
 CellChangeTimes->{3.5834615488622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Boole", "[", "%491", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.5834612662925653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "%492", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["127"], "Output",
 CellChangeTimes->{3.5834612693846607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"10", "^", "3"}], "-", "127"}]], "Input",
 CellChangeTimes->{{3.583461276410109*^9, 3.583461280122456*^9}}],

Cell[BoxData["873"], "Output",
 CellChangeTimes->{3.583461280884727*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "10"}], "]"}], ",", "PrimeQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.583461204910859*^9, 3.583461235705056*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{{3.583461223400772*^9, 3.5834612362454033`*^9}}]
}, Open  ]]
},
WindowSize->{681, 749},
WindowMargins->{{Automatic, 2}, {Automatic, 17}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3583429881-5115956"->{
  Cell[182237, 4844, 1099, 20, 63, "Print",
   CellTags->"Info3583429881-5115956"]},
 "Info3583431567-5115956"->{
  Cell[261599, 5960, 525, 12, 63, "Print",
   CellTags->"Info3583431567-5115956"]},
 "Info3583432239-5115956"->{
  Cell[340470, 7063, 555, 13, 46, "Print",
   CellTags->"Info3583432239-5115956"]},
 "Info3583432726-5115956"->{
  Cell[342230, 7128, 1126, 21, 101, "Print",
   CellTags->"Info3583432726-5115956"]},
 "Info3583476285-5115956"->{
  Cell[359492, 7668, 126, 2, 42, "Print",
   CellTags->"Info3583476285-5115956"],
  Cell[359621, 7672, 2282, 72, 369, "Print",
   CellTags->"Info3583476285-5115956"]},
 "Info3583476302-5115956"->{
  Cell[362387, 7767, 126, 2, 42, "Print",
   CellTags->"Info3583476302-5115956"],
  Cell[362516, 7771, 2387, 76, 424, "Print",
   CellTags->"Info3583476302-5115956"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3583429881-5115956", 370232, 7993},
 {"Info3583431567-5115956", 370346, 7996},
 {"Info3583432239-5115956", 370459, 7999},
 {"Info3583432726-5115956", 370572, 8002},
 {"Info3583476285-5115956", 370687, 8005},
 {"Info3583476302-5115956", 370884, 8010}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 353, 9, 31, "Input"],
Cell[935, 33, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070, 39, 121, 2, 31, "Input"],
Cell[1194, 43, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1305, 49, 154, 3, 31, "Input"],
Cell[1462, 54, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1572, 60, 221, 5, 31, "Input"],
Cell[1796, 67, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1906, 73, 238, 6, 31, "Input"],
Cell[2147, 81, 177, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2361, 91, 132, 2, 31, "Input"],
Cell[2496, 95, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2603, 101, 136, 2, 31, "Input"],
Cell[2742, 105, 72, 1, 31, "Output"]
}, Open  ]],
Cell[2829, 109, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[2946, 114, 174, 3, 31, "Input"],
Cell[3123, 119, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3256, 125, 455, 12, 31, "Input"],
Cell[3714, 139, 331, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4082, 152, 157, 3, 31, "Input"],
Cell[4242, 157, 95, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4374, 163, 171, 3, 31, "Input"],
Cell[4548, 168, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4658, 174, 129, 2, 31, "Input"],
Cell[4790, 178, 162, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4989, 187, 131, 2, 31, "Input"],
Cell[5123, 191, 506, 10, 24, "Message"],
Cell[5632, 203, 108, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5777, 210, 131, 2, 31, "Input"],
Cell[5911, 214, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6022, 220, 190, 6, 31, "Input"],
Cell[6215, 228, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6350, 234, 222, 5, 31, "Input"],
Cell[6575, 241, 280, 6, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6892, 252, 295, 7, 52, "Input"],
Cell[7190, 261, 71, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7298, 267, 208, 5, 31, "Input"],
Cell[7509, 274, 152, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7698, 283, 133, 2, 31, "Input"],
Cell[7834, 287, 71, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7942, 293, 130, 2, 31, "Input"],
Cell[8075, 297, 73, 1, 31, "Output"]
}, Open  ]],
Cell[8163, 301, 281, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[8469, 313, 296, 8, 31, "Input"],
Cell[8768, 323, 6388, 176, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15193, 504, 274, 8, 31, "Input"],
Cell[15470, 514, 331, 11, 31, "Output"]
}, Open  ]],
Cell[15816, 528, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[15935, 533, 441, 12, 31, "Input"],
Cell[16379, 547, 232, 4, 31, "Output"]
}, Open  ]],
Cell[16626, 554, 329, 9, 52, "Input"],
Cell[16958, 565, 147, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[17130, 571, 181, 4, 31, "Input"],
Cell[17314, 577, 160, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17511, 586, 208, 5, 31, "Input"],
Cell[17722, 593, 160, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17919, 602, 480, 12, 31, "Input"],
Cell[18402, 616, 19525, 260, 2752, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37964, 881, 104, 1, 31, "Input"],
Cell[38071, 884, 4994, 133, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43102, 1022, 160, 3, 31, "Input"],
Cell[43265, 1027, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43376, 1033, 195, 4, 31, "Input"],
Cell[43574, 1039, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43684, 1045, 207, 5, 31, "Input"],
Cell[43894, 1052, 538, 11, 43, "Message"],
Cell[44435, 1065, 538, 11, 43, "Message"],
Cell[44976, 1078, 87, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45100, 1085, 19819, 261, 3032, "Input"],
Cell[64922, 1348, 76, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65035, 1354, 141, 3, 31, "Input"],
Cell[65179, 1359, 98, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65314, 1366, 112, 3, 59, "Input"],
Cell[65429, 1371, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65538, 1377, 212, 5, 31, "Input"],
Cell[65753, 1384, 99, 1, 31, "Output"]
}, Open  ]],
Cell[65867, 1388, 91, 2, 59, "Input"],
Cell[CellGroupData[{
Cell[65983, 1394, 140, 3, 31, "Input"],
Cell[66126, 1399, 94, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66257, 1406, 100, 3, 59, "Input"],
Cell[66360, 1411, 89, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66486, 1417, 110, 3, 59, "Input"],
Cell[66599, 1422, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66706, 1428, 162, 4, 31, "Input"],
Cell[66871, 1434, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66982, 1440, 162, 4, 31, "Input"],
Cell[67147, 1446, 90, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67274, 1453, 138, 3, 31, "Input"],
Cell[67415, 1458, 95, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67547, 1465, 109, 3, 59, "Input"],
Cell[67659, 1470, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67766, 1476, 160, 4, 31, "Input"],
Cell[67929, 1482, 114, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68080, 1489, 98, 3, 59, "Input"],
Cell[68181, 1494, 87, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68305, 1500, 161, 4, 31, "Input"],
Cell[68469, 1506, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68579, 1512, 140, 3, 31, "Input"],
Cell[68722, 1517, 119, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68878, 1524, 107, 3, 59, "Input"],
Cell[68988, 1529, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69097, 1535, 162, 4, 31, "Input"],
Cell[69262, 1541, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69397, 1547, 135, 3, 31, "Input"],
Cell[69535, 1552, 91, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69663, 1559, 107, 3, 59, "Input"],
Cell[69773, 1564, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69880, 1570, 161, 4, 31, "Input"],
Cell[70044, 1576, 71, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70152, 1582, 136, 3, 31, "Input"],
Cell[70291, 1587, 92, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70420, 1594, 106, 3, 59, "Input"],
Cell[70529, 1599, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70638, 1605, 142, 3, 31, "Input"],
Cell[70783, 1610, 96, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70916, 1617, 110, 3, 59, "Input"],
Cell[71029, 1622, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71136, 1628, 162, 4, 31, "Input"],
Cell[71301, 1634, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71412, 1640, 139, 3, 31, "Input"],
Cell[71554, 1645, 93, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71684, 1652, 109, 3, 59, "Input"],
Cell[71796, 1657, 69, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71902, 1663, 161, 4, 31, "Input"],
Cell[72066, 1669, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72178, 1675, 174, 4, 31, "Input"],
Cell[72355, 1681, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72462, 1687, 160, 4, 31, "Input"],
Cell[72625, 1693, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72734, 1699, 134, 3, 31, "Input"],
Cell[72871, 1704, 93, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73001, 1711, 107, 3, 59, "Input"],
Cell[73111, 1716, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73220, 1722, 161, 4, 31, "Input"],
Cell[73384, 1728, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73491, 1734, 173, 4, 31, "Input"],
Cell[73667, 1740, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73776, 1746, 110, 2, 31, "Input"],
Cell[73889, 1750, 71, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73997, 1756, 175, 4, 31, "Input"],
Cell[74175, 1762, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74282, 1768, 148, 3, 31, "Input"],
Cell[74433, 1773, 123, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74593, 1781, 140, 4, 31, "Input"],
Cell[74736, 1787, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74845, 1793, 132, 2, 31, "Input"],
Cell[74980, 1797, 92, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75109, 1804, 165, 3, 31, "Input"],
Cell[75277, 1809, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75384, 1815, 177, 3, 31, "Input"],
Cell[75564, 1820, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75671, 1826, 130, 2, 31, "Input"],
Cell[75804, 1830, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75929, 1836, 151, 3, 31, "Input"],
Cell[76083, 1841, 198, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76318, 1851, 128, 2, 31, "Input"],
Cell[76449, 1855, 105, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76591, 1862, 247, 6, 31, "Input"],
Cell[76841, 1870, 651, 22, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77529, 1897, 829, 27, 104, "Input"],
Cell[78361, 1926, 2116, 41, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80514, 1972, 817, 26, 104, "Input"],
Cell[81334, 2000, 77, 1, 31, "Output"]
}, Open  ]],
Cell[81426, 2004, 810, 26, 104, "Input"],
Cell[82239, 2032, 2437, 48, 561, InheritFromParent],
Cell[CellGroupData[{
Cell[84701, 2084, 205, 4, 31, "Input"],
Cell[84909, 2090, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85043, 2096, 205, 4, 31, "Input"],
Cell[85251, 2102, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85385, 2108, 65, 1, 31, "Input"],
Cell[85453, 2111, 1095, 15, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86585, 2131, 10935, 184, 201, "Input"],
Cell[97523, 2317, 108, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97668, 2323, 116, 2, 31, "Input"],
Cell[97787, 2327, 93, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97917, 2334, 97, 3, 59, "Input"],
Cell[98017, 2339, 89, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98143, 2345, 118, 2, 31, "Input"],
Cell[98264, 2349, 91, 2, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98392, 2356, 139, 4, 58, "Input"],
Cell[98534, 2362, 114, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98685, 2368, 122, 4, 58, "Input"],
Cell[98810, 2374, 134, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98981, 2381, 212, 4, 31, "Input"],
Cell[99196, 2387, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99303, 2393, 172, 4, 59, "Input"],
Cell[99478, 2399, 158, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99673, 2406, 123, 4, 59, "Input"],
Cell[99799, 2412, 134, 2, 31, "Output"]
}, Open  ]],
Cell[99948, 2417, 170, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[100143, 2425, 444, 12, 31, "Input"],
Cell[100590, 2439, 5229, 73, 492, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105856, 2517, 1109, 32, 92, "Input"],
Cell[106968, 2551, 190, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107195, 2560, 615, 19, 52, "Input"],
Cell[107813, 2581, 95, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107945, 2587, 121, 2, 31, "Input"],
Cell[108069, 2591, 118, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108224, 2599, 143, 3, 31, "Input"],
Cell[108370, 2604, 137, 4, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108544, 2613, 152, 3, 31, "Input"],
Cell[108699, 2618, 214, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108950, 2629, 87, 2, 31, "Input"],
Cell[109040, 2633, 264, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109341, 2646, 169, 4, 31, "Input"],
Cell[109513, 2652, 134, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109684, 2659, 168, 4, 31, "Input"],
Cell[109855, 2665, 158, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110050, 2672, 179, 4, 31, "Input"],
Cell[110232, 2678, 222, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110491, 2689, 219, 7, 31, "Input"],
Cell[110713, 2698, 91, 2, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110841, 2705, 253, 9, 31, "Input"],
Cell[111097, 2716, 94, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111228, 2723, 283, 8, 42, "Input"],
Cell[111514, 2733, 276, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111827, 2745, 153, 3, 31, "Input"],
Cell[111983, 2750, 5274, 137, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117294, 2892, 152, 3, 31, "Input"],
Cell[117449, 2897, 5274, 137, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122760, 3039, 139, 3, 36, "Input"],
Cell[122902, 3044, 77, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123016, 3050, 336, 10, 42, "Input"],
Cell[123355, 3062, 319, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123711, 3075, 139, 3, 36, "Input"],
Cell[123853, 3080, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123964, 3086, 187, 5, 36, "Input"],
Cell[124154, 3093, 98, 1, 31, "Output"]
}, Open  ]],
Cell[124267, 3097, 171, 4, 31, "Input"],
Cell[124441, 3103, 171, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[124637, 3111, 217, 5, 31, "Input"],
Cell[124857, 3118, 246, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125140, 3130, 206, 5, 31, "Input"],
Cell[125349, 3137, 435, 13, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125821, 3155, 297, 8, 31, "Input"],
Cell[126121, 3165, 5405, 183, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131563, 3353, 746, 23, 52, "Input"],
Cell[132312, 3378, 224, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132573, 3388, 214, 6, 31, "Input"],
Cell[132790, 3396, 202, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133029, 3406, 196, 5, 31, "Input"],
Cell[133228, 3413, 139, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133404, 3421, 114, 2, 31, "Input"],
Cell[133521, 3425, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133630, 3431, 115, 2, 31, "Input"],
Cell[133748, 3435, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133858, 3441, 287, 7, 31, "Input"],
Cell[134148, 3450, 546, 11, 42, "Message"],
Cell[134697, 3463, 105, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134839, 3470, 115, 2, 31, "Input"],
Cell[134957, 3474, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135067, 3480, 115, 2, 31, "Input"],
Cell[135185, 3484, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135297, 3490, 161, 4, 31, "Input"],
Cell[135461, 3496, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135571, 3502, 196, 5, 31, "Input"],
Cell[135770, 3509, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135903, 3515, 119, 2, 31, "Input"],
Cell[136025, 3519, 76, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136138, 3525, 114, 2, 31, "Input"],
Cell[136255, 3529, 76, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136368, 3535, 117, 2, 31, "Input"],
Cell[136488, 3539, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136598, 3545, 117, 2, 31, "Input"],
Cell[136718, 3549, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136828, 3555, 115, 2, 31, "Input"],
Cell[136946, 3559, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137057, 3565, 115, 2, 31, "Input"],
Cell[137175, 3569, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137285, 3575, 143, 3, 31, "Input"],
Cell[137431, 3580, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137541, 3586, 160, 4, 31, "Input"],
Cell[137704, 3592, 124, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137865, 3599, 229, 6, 31, "Input"],
Cell[138097, 3607, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138231, 3613, 309, 8, 31, "Input"],
Cell[138543, 3623, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138678, 3629, 140, 3, 31, "Input"],
Cell[138821, 3634, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138933, 3640, 245, 7, 31, "Input"],
Cell[139181, 3649, 127, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139345, 3657, 1171, 29, 132, "Input"],
Cell[140519, 3688, 230, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140786, 3699, 198, 6, 31, "Input"],
Cell[140987, 3707, 77, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141101, 3713, 196, 6, 31, "Input"],
Cell[141300, 3721, 77, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141414, 3727, 196, 5, 31, "Input"],
Cell[141613, 3734, 75, 1, 31, "Output"]
}, Open  ]],
Cell[141703, 3738, 94, 1, 31, "Input"],
Cell[141800, 3741, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[141921, 3746, 213, 4, 31, "Input"],
Cell[142137, 3752, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142270, 3758, 366, 10, 31, "Input"],
Cell[142639, 3770, 268, 8, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142944, 3783, 159, 3, 31, "Input"],
Cell[143106, 3788, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143239, 3794, 248, 7, 31, "Input"],
Cell[143490, 3803, 154, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143681, 3811, 139, 4, 31, "Input"],
Cell[143823, 3817, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143932, 3823, 192, 4, 31, "Input"],
Cell[144127, 3829, 127, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144291, 3837, 160, 3, 31, "Input"],
Cell[144454, 3842, 137, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144628, 3850, 767, 24, 52, "Input"],
Cell[145398, 3876, 205, 5, 31, "Output"]
}, Open  ]],
Cell[145618, 3884, 144, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[145787, 3891, 1090, 28, 92, "Input"],
Cell[146880, 3921, 2046, 58, 134, "Output"]
}, Open  ]],
Cell[148941, 3982, 528, 17, 52, "Input"],
Cell[CellGroupData[{
Cell[149494, 4003, 221, 6, 31, "Input"],
Cell[149718, 4011, 436, 13, 31, "Output"]
}, Open  ]],
Cell[150169, 4027, 171, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[150365, 4034, 119, 2, 31, "Input"],
Cell[150487, 4038, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150612, 4044, 473, 13, 52, "Input"],
Cell[151088, 4059, 331, 8, 61, "Message"],
Cell[151422, 4069, 5592, 89, 592, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157051, 4163, 176, 4, 31, "Input"],
Cell[157230, 4169, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157337, 4175, 380, 11, 31, "Input"],
Cell[157720, 4188, 4950, 80, 572, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162707, 4273, 149, 3, 31, "Input"],
Cell[162859, 4278, 189, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163085, 4288, 202, 6, 31, "Input"],
Cell[163290, 4296, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163399, 4302, 126, 2, 31, "Input"],
Cell[163528, 4306, 510, 10, 43, "Message"],
Cell[164041, 4318, 105, 2, 31, "Output"]
}, Open  ]],
Cell[164161, 4323, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[164278, 4328, 289, 7, 31, "Input"],
Cell[164570, 4337, 103, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164710, 4343, 913, 27, 112, "Input"],
Cell[165626, 4372, 328, 8, 61, "Message"],
Cell[165957, 4382, 7602, 145, 814, "Output"]
}, Open  ]],
Cell[173574, 4530, 216, 4, 31, "Input"],
Cell[173793, 4536, 482, 14, 31, "Input"],
Cell[174278, 4552, 860, 21, 72, "Input"],
Cell[CellGroupData[{
Cell[175163, 4577, 156, 3, 31, "Input"],
Cell[175322, 4582, 223, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175582, 4591, 165, 3, 31, "Input"],
Cell[175750, 4596, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175881, 4602, 229, 5, 31, "Input"],
Cell[176113, 4609, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176224, 4615, 208, 5, 31, "Input"],
Cell[176435, 4622, 124, 2, 31, "Output"]
}, Open  ]],
Cell[176574, 4627, 142, 3, 31, "Input"],
Cell[176719, 4632, 467, 15, 31, "Input"],
Cell[177189, 4649, 620, 19, 72, "Input"],
Cell[CellGroupData[{
Cell[177834, 4672, 99, 2, 31, "Input"],
Cell[177936, 4676, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178046, 4682, 140, 4, 31, "Input"],
Cell[178189, 4688, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178298, 4694, 163, 4, 31, "Input"],
Cell[178464, 4700, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178575, 4706, 277, 6, 31, "Input"],
Cell[178855, 4714, 185, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179077, 4724, 207, 5, 31, "Input"],
Cell[179287, 4731, 183, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179507, 4741, 334, 8, 52, "Input"],
Cell[179844, 4751, 100, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179981, 4757, 381, 9, 72, "Input"],
Cell[180365, 4768, 207, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180609, 4778, 344, 9, 31, "Input"],
Cell[180956, 4789, 167, 4, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181160, 4798, 118, 2, 31, "Input"],
Cell[181281, 4802, 79, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181397, 4808, 129, 4, 61, "Input"],
Cell[181529, 4814, 87, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181653, 4820, 121, 2, 31, "Input"],
Cell[181777, 4824, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181889, 4830, 119, 2, 31, "Input"],
Cell[182011, 4834, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182122, 4840, 112, 2, 31, "Input"],
Cell[182237, 4844, 1099, 20, 63, "Print",
 CellTags->"Info3583429881-5115956"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183373, 4869, 152, 3, 31, "Input"],
Cell[183528, 4874, 134, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183699, 4883, 148, 5, 31, "Input"],
Cell[183850, 4890, 92, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183979, 4897, 210, 5, 31, "Input"],
Cell[184192, 4904, 214, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184443, 4915, 209, 7, 31, "Input"],
Cell[184655, 4924, 128, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184820, 4932, 377, 11, 52, "Input"],
Cell[185200, 4945, 76242, 1006, 12212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261479, 5956, 117, 2, 31, "Input"],
Cell[261599, 5960, 525, 12, 63, "Print",
 CellTags->"Info3583431567-5115956"]
}, Open  ]],
Cell[262139, 5975, 237, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[262401, 5984, 385, 11, 52, "Input"],
Cell[262789, 5997, 76240, 1006, 12212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339066, 7008, 220, 5, 31, "Input"],
Cell[339289, 7015, 190, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339516, 7026, 213, 5, 31, "Input"],
Cell[339732, 7033, 192, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339961, 7044, 128, 2, 31, "Input"],
Cell[340092, 7048, 76, 1, 31, "Output"]
}, Open  ]],
Cell[340183, 7052, 143, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[340351, 7059, 116, 2, 31, "Input"],
Cell[340470, 7063, 555, 13, 46, "Print",
 CellTags->"Info3583432239-5115956"]
}, Open  ]],
Cell[341040, 7079, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[341159, 7084, 134, 2, 31, "Input"],
Cell[341296, 7088, 125, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341458, 7096, 141, 4, 31, "Input"],
Cell[341602, 7102, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341711, 7108, 230, 6, 31, "Input"],
Cell[341944, 7116, 125, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342106, 7124, 121, 2, 31, "Input"],
Cell[342230, 7128, 1126, 21, 101, "Print",
 CellTags->"Info3583432726-5115956"]
}, Open  ]],
Cell[343371, 7152, 180, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[343576, 7159, 137, 2, 31, "Input"],
Cell[343716, 7163, 158, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343911, 7172, 264, 7, 31, "Input"],
Cell[344178, 7181, 127, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344342, 7189, 182, 4, 31, "Input"],
Cell[344527, 7195, 125, 3, 31, "Output"]
}, Open  ]],
Cell[344667, 7201, 98, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[344790, 7206, 901, 25, 73, "Input"],
Cell[345694, 7233, 736, 22, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346467, 7260, 426, 13, 31, "Input"],
Cell[346896, 7275, 274, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347207, 7289, 1632, 43, 145, "Input"],
Cell[348842, 7334, 1105, 16, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349984, 7355, 83, 2, 31, "Input"],
Cell[350070, 7359, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350180, 7365, 443, 9, 52, "Input"],
Cell[350626, 7376, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350736, 7382, 342, 7, 31, "Input"],
Cell[351081, 7391, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351191, 7397, 182, 4, 31, "Input"],
Cell[351376, 7403, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351488, 7409, 187, 3, 31, "Input"],
Cell[351678, 7414, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351811, 7420, 350, 9, 31, "Input"],
Cell[352164, 7431, 151, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352352, 7439, 1471, 41, 144, "Input"],
Cell[353826, 7482, 1383, 40, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355246, 7527, 135, 2, 31, "Input"],
Cell[355384, 7531, 428, 8, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355849, 7544, 137, 2, 31, "Input"],
Cell[355989, 7548, 158, 4, 31, "Output"]
}, Open  ]],
Cell[356162, 7555, 358, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[356545, 7568, 132, 2, 31, "Input"],
Cell[356680, 7572, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356790, 7578, 205, 5, 31, "Input"],
Cell[356998, 7585, 114, 3, 31, "Output"]
}, Open  ]],
Cell[357127, 7591, 2195, 67, 272, "Input"],
Cell[CellGroupData[{
Cell[359347, 7662, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[359492, 7668, 126, 2, 42, "Print",
 CellTags->"Info3583476285-5115956"],
Cell[359621, 7672, 2282, 72, 369, "Print",
 CellTags->"Info3583476285-5115956"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361952, 7750, 129, 2, 31, "Input"],
Cell[362084, 7754, 124, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362245, 7761, 117, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[362387, 7767, 126, 2, 42, "Print",
 CellTags->"Info3583476302-5115956"],
Cell[362516, 7771, 2387, 76, 424, "Print",
 CellTags->"Info3583476302-5115956"]
}, Open  ]]
}, Open  ]],
Cell[364930, 7851, 122, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[365077, 7857, 909, 25, 92, "Input"],
Cell[365989, 7884, 318, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366344, 7894, 625, 11, 92, "Input"],
Cell[366972, 7907, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367081, 7913, 82, 2, 31, "Input"],
Cell[367166, 7917, 1868, 26, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369071, 7948, 82, 2, 31, "Input"],
Cell[369156, 7952, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369267, 7958, 141, 3, 31, "Input"],
Cell[369411, 7963, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369520, 7969, 212, 5, 31, "Input"],
Cell[369735, 7976, 161, 3, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
